#!/usr/bin/env bash
# Fedora Workstation Setup
# WARNING: This is a personal installation script.
# Please review this script and adjust it to your needs prior to running it.
# This script is intended for a minimal Fedora Workstation installation on a Thinkpad
# run as root:
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/dwm/install-dwm-workstation > custom-fedora-setup
# $SHELL custom-fedora-setup <username>
# # # # # # # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
USER="${1:francis}"

# Run as root
# Commandline Tools
# # # # # # # # # # # # # # #
pw group mod -n wheel -m $USER 
pw group mod -n operator -m $USER 
kldload linux64
pkg install -y autoconf automake git htop rsync
bash -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"
su -l $USER -c 'bash -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"'

# Xorg base
# # # # # # # # # # # # # # #

# Install Ports 
# # # # # # # # # # # # # # #
# portsnap fetch
# portsnap extract
# cd /usr/ports/ports-mgmt/portmaster
# make install clean
# portmaster -G --no-confirm sysutils/gnome-control-center 
# portmaster -G --no-confirm devel/ruby-gems 
# portmaster -G --no-confirm multimedia/devede 
# ln -s /usr/ports/multimedia/devede/work/stage/usr/local/bin/devede /usr/bin/devede

# Install supporting applications
# # # # # # # # # # # # # # #
pkg install -y xorg
pkg install -y font-awesome gucharmap
pkg install -y xbacklight feh sxhkd setxkbmap
pkg install -y xautolock asciiquarium
pkg install -y lxappearance redshift
pkg install -y pulseaudio alsa-utils compton 
pkg install -y pulseeffects pavucontrol
pkg install -y rxvt-unicode xclip vim
pkg install -y arandr zenity flameshot
pkg install -y dunst mailx
pkg install -y wordnet en-aspell
pkg install -y gnome-themes-extra matcha-gtk-themes papirus-icon-theme
pkg install -y nemo
pkg install -y fusefs-ext2 libmtp gvfs
pkg install -y system-config-printer
pkg install -y nomacs
# dnf install -y simple-scan
pkg install -y gnome-disk-utility atool
pkg install -y cups hplip
pkg install -y clamav
pkg install -y brasero

# gnome control center
pkg install -y gnome-control-center
chmod 0444 /dev/devstat
echo "perm    devstat 0444" >> /etc/devfs.conf

# suckless setup
# st - terminal
su -l $USER -c 'mkdir ~/lab'
su -l $USER -c 'git clone https://git.suckless.org/st ~/lab/st'
su -l $USER -c 'cd ~/lab/st && git checkout 914fb825df3bde7abdd7947e54f8bf4d2b55e34e'
su -l $USER -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-scrollback-20200419-72e3f6c.diff'
su -l $USER -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-scrollback-mouse-20191024-a2c479c.diff'
su -l $USER -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-alpha-0.8.2.diff'
su -l $USER -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-gruvbox-both-alpha-20200510-0.8.3.diff'
su -l $USER -c 'cp ~/.yadrlite/dwm/st/config.h ~/lab/st'
su -l $USER -c 'cp -f ~/.yadrlite/dwm/st/config.mk ~/lab/st/config.mk'
cd /home/$USER/lab/st && make install clean
# dwm - windows manager
su -l $USER -c 'git clone https://git.suckless.org/dwm ~/lab/dwm'
su -l $USER -c 'cd ~/lab/dwm && git checkout f09418bbb6651ab4c299cfefbe1d18de401f630e'
su -l $USER -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-ru_gaps-20200510-6.2.diff'
su -l $USER -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-attachbottom-20200510-6.2.diff'
su -l $USER -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-rotatestack-20200510-6.2.diff'
su -l $USER -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-statuscolors-20200511-6.2.diff'
su -l $USER -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-actualfullscreen-20200602-6.2.diff'
su -l $USER -c 'cp ~/.yadrlite/dwm/dwm/config.h ~/lab/dwm'
su -l $USER -c 'cp -f ~/.yadrlite/dwm/dwm/config.mk ~/lab/dwm/config.mk'
cd /home/$USER/lab/dwm && make install clean
# dwm - dmenu for app launcher script
su -l $USER -c 'git clone https://git.suckless.org/dmenu ~/lab/dmenu'
su -l $USER -c 'cd ~/lab/dmenu && git checkout db6093f6ec1bb884f7540f2512935b5254750b30'
su -l $USER -c 'cd ~/lab/dmenu && git apply -3 ~/.yadrlite/dwm/dmenu/dmenu-highlight-4.9.diff'
su -l $USER -c 'cp ~/.yadrlite/dwm/dmenu/config.h ~/lab/dmenu'
su -l $USER -c 'cp -f ~/.yadrlite/dwm/dmenu/config.mk ~/lab/dmenu/config.mk'
cd /home/$USER/lab/dmenu && make install clean
# dwm - slock for screen locking
su -l $USER -c 'git clone https://git.suckless.org/slock ~/lab/slock'
su -l $USER -c 'cd ~/lab/slock && git checkout 35633d45672d14bd798c478c45d1a17064701aa9'
su -l $USER -c 'cd ~/lab/slock && git apply -3 ~/.yadrlite/dwm/slock/slock-unlock_screen-1.4.diff'
su -l $USER -c 'cp ~/.yadrlite/dwm/slock/config.h ~/lab/slock'
su -l $USER -c 'cp -f ~/.yadrlite/dwm/slock/config.mk ~/lab/slock/config.mk'
cd /home/$USER/lab/slock && make install clean

# install xbanish
# # # # # # # # # # # # # # #
pkg install -y xbanish

# copy over system start resources
# # # # # # # # # # # # # # #
su -l $USER -c 'cp -f ~/.yadrlite/dwm/Xresources ~/.Xresources'
su -l $USER -c 'mkdir -p ~/.config/scripts'
su -l $USER -c 'cp ~/.yadrlite/dwm/scripts-bsd/* ~/.config/scripts'
su -l $USER -c 'cp ~/.yadrlite/dwm/xinitrc ~/.xinitrc'
su -l $USER -c "cp -r ~/.yadrlite/dwm/ranger ~/.config"
cp -r ~/.yadrlite/dwm/ranger ~/.config
su -l $USER -c "cp -r ~/.yadrlite/dwm/nvim ~/.config"
cp -r ~/.yadrlite/dwm/nvim ~/.config
sed -i '/# Default Prompt/a export EDITOR=nvim\nexport PAGER=less\nalias vi="nvim"\nalias vim="nvim"\nalias urxvt="urxvt256c"' /home/$USER/.bashrc
sed -i '/# Default Prompt/a export EDITOR=nvim\nexport PAGER=less\nalias vi="nvim"\nalias vim="nvim"\nalias urxvt="urxvt256c"' ~/.bashrc
# uncomment the following line to give Sudoers access to the user account
echo "pgrep 'tmux|start' || startx" >> /home/$USER/.bash_profile
# urxvt terminal font resizing
su -l $USER -c 'mkdir -p ~/.urxvt/ext'
su -l $USER -c 'cd ~/.urxvt/ext && wget "https://raw.githubusercontent.com/simmel/urxvt-resize-font/master/resize-font"'
# urxvt patch for extended color designations past 15
su -l $USER -c 'cd ~/.urxvt/ext && wget "https://raw.githubusercontent.com/Roliga/urxvt-xresources-256/master/xresources-256"'
# powerline font patch
pkg install -y powerline-fonts
fc-cache
# misc
su -l $USER -c 'mkdir -p ~/Apps'

# activate dunst
# # # # # # # # # # # # # # #
service dbus enable
service dbus start
su -l $USER -c "cp -r ~/.yadrlite/dwm/dunst ~/.config"

# low battery indication
# # # # # # # # # # # # # # #
# sudo dnf install -y acpi ntpdate
# (crontab -u $USER -l; echo "*/15 * * * * $SHELL /home/${USER}/.config/scripts/battery >/dev/null 2>&1") | crontab -u $USER -

# backlight fix for i915 GPU's
# to work with cbacklight script
# usermod -a -G video $USER
# echo "ACTION==\"add\", SUBSYSTEM==\"backlight\", KERNEL==\"intel_backlight\", RUN+=\"/bin/chgrp video /sys/class/backlight/%k/brightness\"" >> /etc/udev/rules.d/backlight.rules
# echo "ACTION==\"add\", SUBSYSTEM==\"backlight\", KERNEL==\"intel_backlight\", RUN+=\"/bin/chmod g+w /sys/class/backlight/%k/brightness\"" >> /etc/udev/rules.d/backlight.rules
# cp /home/$USER/.yadrlite/dwm/scripts/cbacklight /usr/bin/cbacklight

# syncs headphone to master sound control
# vi /usr/share/pulseaudio/alsa-mixer/paths/analog-output-headphones.conf
# change to: volume = merge

# Add "tap to click" for touchpads
# # # # # # # # # # # # # # #
# sed -i '/Identifier "libinput touchpad catchall"/a \\tOption "Tapping" "on"' /usr/share/X11/xorg.conf.d/40-libinput.conf

# bluetooth headset fix for better audio quality
# sed -i 's/module-bluetooth-discover/module-bluetooth-discover headset=auto/' /etc/pulse/default.pa

# help the sound (for Thinkpads)
# # # # # # # # # # # # # # #
echo "default-sample-format = float32le" >> /usr/local/etc/pulse/daemon.conf
echo "default-sample-rate = 48000" >> /usr/local/etc/pulse/daemon.conf
echo "alternate-sample-rate = 44100" >> /usr/local/etc/pulse/daemon.conf
echo "default-fragments = 2" >> /usr/local/etc/pulse/daemon.conf
echo "default-fragment-size-msec = 125" >> /usr/local/etc/pulse/daemon.conf
echo "resample-method = soxr-vhq" >> /usr/local/etc/pulse/daemon.conf
echo "enable-lfe-remixing = no" >> /usr/local/etc/pulse/daemon.conf
echo "high-priority = yes" >> /usr/local/etc/pulse/daemon.conf
echo "realtime-scheduling = yes" >> /usr/local/etc/pulse/daemon.conf
echo "realtime-priority = 9" >> /usr/local/etc/pulse/daemon.conf
echo "rlimit-rtprio = 9" >> /usr/local/etc/pulse/daemon.conf
echo "daemonize = no" >> /usr/local/etc/pulse/daemon.conf

# set timezone
# # # # # # # # # # # # # # #
# timedatectl set-timezone America/Los_Angeles

# enable thinkfan
# this is a sample config for a t460
# # # # # # # # # # # # # # #
# dnf install -y thinkfan
# HWMONDEV=`basename /sys/devices/platform/coretemp.0/hwmon/*`
# sed -i "/55)/i \
# hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp3_input \n\
# hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp4_input \n\
# hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp1_input \n\
# hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp5_input \n\
# hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp2_input \n\
# " /etc/thinkfan.conf
# systemctl enable thinkfan

# install non-free firmware for compatibilty crises
# dnf install -y rpm fusion-nonfree-release-tainted
# dnf install -y \*-firmware

# install PHP essentials
# # # # # # # # # # # # # # #
pkg install -y php74
cp /usr/local/etc/php.ini-production /usr/local/etc/php.ini 

# required modules for boris and phpctags
# # # # # # # # # # # # # # #
dnf install -y php74-json php74-readline
pkg install -y ruby ruby26-gems
gem install rails
pkg install -y node yarn npm
npm install npm@latest -g
npm install -g grunt-cli coffee-jshint eslint js-yaml csslint-lite
su -l $USER -c 'git clone https://github.com/xcwen/phpctags.git ~/lab/phpctags'
su -l $USER -c 'make -C ~/lab/phpctags'
cp /home/$USER/lab/phpcstags/phpctags.phar /usr/local/bin/
gem update
gem install compass

# boris (nice PHP sandbox tool)
# # # # # # # # # # # # # # #
curl -L -O https://github.com/borisrepl/boris/releases/download/v1.0.8/boris.phar
chmod +x boris.phar
mv boris.phar /usr/local/bin/boris

# PHP Parallel Lint
# # # # # # # # # # # # # # #
pkg install -y php74-composer
sudo sed -i "s#;phar.readonly = On#phar.readonly = Off#" /etc/php.ini
#   systemctl restart httpd
su -l $USER -c "mkdir -p ~/lab/box-phar"
goosu -l $USER -c "cd ~/lab/box-phar && curl -LSs https://box-project.github.io/box2/installer.php | php"
cp /home/$USER/lab/box-phar/box.phar /usr/local/bin/box && chmod 755 /usr/local/bin/box
su -l $USER -c "git clone https://github.com/JakubOnderka/PHP-Parallel-Lint.git ~/lab/PHP-Parallel-Lint"
su -l $USER -c "cd ~/lab/PHP-Parallel-Lint && composer install"
su -l $USER -c "cp ~/lab/PHP-Parallel-Lint/parallel-lint ~/lab/PHP-Parallel-Lint/parallel-lint.php"
su -l $USER -c "cd ~/lab/PHP-Parallel-Lint && box build"
cp /home/$USER/lab/PHP-Parallel-Lint/parallel-lint.phar /usr/local/bin/parallel-lint && chmod 755 /usr/local/bin/parallel-lint

# install code editors and PHP dev tools
# # # # # # # # # # # # # # #
pkg install -y tmux the_silver_searcher p5-ack fzf
pkg install -y tree py37-ranger w3m w3m-img expect
pkg install -y hugo
# # install ctags
pkg install -y ctags
# # neovim
pkg install -y neovim py37-pip
pip install pynvim
gem install neovim
npm install -g neovim
#
# emacs
pkg install -y emacs

# Support Software
pkg install -y nextcloudclient
pkg install -y gimp gimp-beautify-plugin gimp-data-extras gimp-lqr-plugin
pkg install -y libreoffice
pkg install -y spotify-tui
pkg install -y spotifyd
pkg install -y signal-cli
pkg install -y musescore

# Install Browsers
pkg install -y chromium firefox

# Bluetooth
pkg install -y xf86-input-synaptic
echo 'hw.psm.synaptics_support="1"' >> /boot/loader.conf
service bluetooth enable
service bluetooth start

# Firewall
service ipfw enable
service ipfw start
sysrc firewall_enable="YES"
sysrc firewall_type="client"
sysrc firewall_logging="YES"
sysrc firewall_script="/etc/rc.firewall"
sysrc firewall_quiet="NO"
sysrc firewall_flags=""
sysrc ipfilter_enable="YES"
sysrc ipfilter_program="/sbin/ipf"
sysrc ipfilter_rules="/etc/ipf.rules"
sysrc ipfilter_flags=""
cp ~/.yadrlite/dwm/ipf/ipf.rules /etc

# install Vagrant and Virtualbox
pkg install -y vagrant VirtualBox
pw group mod -n vboxusers -m $USER 
chmod +x /usr/local/lib/virtualbox/VirtualBox

# Gargoyle (for sanity checks)
# # # # # # # # # # # # # # #
# dnf install -y SDL SDL_mixer SDL_sound fluidsynth
pkg install -y sdl sdl_mixer sdl_sound
pkg install -y jpeg lib smpeg
pkg install -y libvorbis freetype 
pkg install -y jam gtk2
cd /home/$USER/lab/garglk
sudo env SYSTEM=1 jam install
sudo ln -s -f /usr/local/libexec/gargoyle/gargoyle /usr/local/bin/gargoyle
sudo ln -s -f /usr/local/lib/gargoyle/libgarglk.so /usr/lib/libgarglk.so
sudo cp garglk/garglk.ini /etc/garglk.ini
su -l $USER -c 'cp ~/.yadrlite/dwm/garglk.ini ~/.garglkrc'

# Chess
# # # # # # # # # # # # # # #
pkg install -y skid stockfish leela-zero

# pdf support
# dnf install -y cups-pdf evince pdfarranger mupdf
# install Adobe Acrobat
# su -c 'cd ~/Downloads && wget "ftp://ftp.adobe.com/pub/adobe/reader/unix/9.x/9.5.5/enu/AdbeRdr9.5.5-1_i486linux_enu.rpm"' $USER
# dnf install -y atk.i686 avahi-libs.i686 bzip2-libs.i686 cairo.i686 cups-libs.i686
# dnf install -y dbus-libs.i686 expat.i686 fontconfig.i686 freetype.i686 fribidi.i686
# dnf install -y gdk-pixbuf2.i686 gdk-pixbuf2-modules.i686 gdk-pixbuf2-xlib.i686
# dnf install -y gdk-pixbuf2-xlib.x86_64 glib2.i686 glibc.i686 gmp.i686 gnutls.i686
# dnf install -y graphite2.i686 gtk2.i686 harfbuzz.i686 jasper-libs.i686 jbigkit-libs.i686
# dnf install -y keyutils-libs.i686 krb5-libs.i686 libICE.i686 libSM.i686 libX11.i686
# dnf install -y libX11-xcb.i686 libXau.i686 libXcomposite.i686 libXcursor.i686
# dnf install -y libXdamage.i686 libXext.i686 libXfixes.i686 libXft.i686 libXi.i686
# dnf install -y libXinerama.i686 libXrandr.i686 libXrender.i686 libXt.i686 libXxf86vm.i686
# dnf install -y libblkid.i686 libcap.i686 libcom_err.i686 libdatrie.i686 libdrm.i686
# dnf install -y libffi.i686 libgcc.i686 libgcrypt.i686 libglvnd.i686 libglvnd-glx.i686
# dnf install -y libgpg-error.i686 libidn.i686 libidn2.i686 libjpeg-turbo.i686 libmount.i686
# dnf install -y libpciaccess.i686 libpng.i686 libselinux.i686 libsepol.i686 libstdc++.i686
# dnf install -y libtasn1.i686 libthai.i686 libtiff.i686 libunistring.i686 libuuid.i686
# dnf install -y libverto.i686 libxcb.i686 libxcrypt.i686 libxml2.i686 libxshmfence.i686
# dnf install -y lz4-libs.i686 mesa-libGL.i686 mesa-libGLU.i686 mesa-libGLU.x86_64
# dnf install -y mesa-libglapi.i686 nettle.i686 openssl-libs.i686 p11-kit.i686 pango.i686
# dnf install -y pangox-compat.i686 pangox-compat.x86_64 pcre.i686 pcre2.i686 pixman.i686
# dnf install -y systemd-libs.i686 xz-libs.i686 zlib.i686 libidn.x86_64
# dnf install -y libidn.i686 coreutils.x86_64 libidn1.34.i686
# rpm -i /home/$USER/Downloads/AdbeRdr*rpm

# handle ACPI wake-up settings for none platform devices
# cp -f /home/$USER/.yadrlite/src/org/system/acpi-wake.service /etc/systemd/system
# chmod 777 /etc/systemd/system/acpi-wake.service
# systemctl start acpi-wake.service
# systemctl enable acpi-wake.service

# permissions, status and boot configuration
# # # # # # # # # # # # # # #
find /home/$USER/.config -type d -exec chmod 0755 {} \;
find /home/$USER/.config -type f -exec chmod 0644 {} \;
find /home/$USER/.config -name "*" -execdir chmod u+x {} +
chown +x /sbin/shutdown
chown +x /sbin/poweroff

# add manual entries
su -l $USER -c 'touch ~/.local/share/applications/screensaver.desktop'
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/screensaver.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/screensaver.desktop
printf 'Name=Start Screen Saver\n' >> /home/$USER/.local/share/applications/screensaver.desktop
printf "Exec=/home/$USER/.config/scripts/screen-saver\n" >> /home/$USER/.local/share/applications/screensaver.desktop
su -l $USER -c 'touch ~/.local/share/applications/hibernate.desktop'
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/hibernate.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/hibernate.desktop
printf 'Name=Hibernate Now\n' >> /home/$USER/.local/share/applications/hibernate.desktop
printf "Exec=/home/$USER/.config/scripts/hibernate\n" >> /home/$USER/.local/share/applications/hibernate.desktop
su -l $USER -c 'touch ~/.local/share/applications/reboot.desktop'
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/reboot.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/reboot.desktop
printf 'Name=Restart Now\n' >> /home/$USER/.local/share/applications/reboot.desktop
printf "Exec=/home/$USER/.config/scripts/reboot-confirm\n" >> /home/$USER/.local/share/applications/reboot.desktop
su -l $USER -c 'touch ~/.local/share/applications/shutdown.desktop'
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/shutdown.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/shutdown.desktop
printf 'Name=Shutdown Now\n' >> /home/$USER/.local/share/applications/shutdown.desktop
printf "Exec=/home/$USER/.config/scripts/shutdown-confirm\n" >> /home/$USER/.local/share/applications/shutdown.desktop
su -l $USER -c 'touch ~/.local/share/applications/mpvdvd.desktop'
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/mpvdvd.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/mpvdvd.desktop
printf 'Name=mpv Media Player DVD\n' >> /home/$USER/.local/share/applications/mpvdvd.desktop
printf "Exec=mpv --dvd-device=/dev/sr0 dvd://\n" >> /home/$USER/.local/share/applications/mpvdvd.desktop
su -l $USER -c 'touch ~/.local/share/applications/mpvdvdall.desktop'
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/mpvdvdall.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/mpvdvdall.desktop
printf 'Name=mpv Media Player DVD Play All\n' >> /home/$USER/.local/share/applications/mpvdvdall.desktop
printf "Exec=mpv --dvd-device=/dev/sr0 dvd://0 dvd://1 dvd://2 dvd://3 dvd://4 dvd://5 dvd://6 dvd://7 dvd://8 dvd://9\n" >> /home/$USER/.local/share/applications/mpvdvd.desktop
su -l $USER -c 'touch ~/.local/share/applications/mpvbd.desktop'
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/mpvbd.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/mpvbd.desktop
printf 'Name=mpv Media Player Bluray\n' >> /home/$USER/.local/share/applications/mpvbd.desktop
printf "Exec=mpv --bluray-device=/dev/sr0 bd://\n" >> /home/$USER/.local/share/applications/mpvbd.desktop 

# Install Multimedia Codecs
pkg install -y mpv youtube-dl
pkg install -y gstreamer1-plugins*
pkg install -y ffmpeg
pkg install -y ffmpeg
pkg install -y lsdvd libdvdnav libdvdread libdvdcss
pkg install -y openjdk8
pkg install -y libbluray
su -c "cp -r ~/.yadrlite/dwm/mpv ~/.config" $USER

# Bluray Playback
# # # # # # # # # # # # # # #
pkg install -y ffmpeg openssl makemkv

# if DVD's don't work try running regionset from comandline
# and then deleteing the ~/.dvdcss directory
# dnf install regionset
# regionset /dev/sr0
# rm ~/.dvdcss

# ... in case you want to enable bash by default
# chsh -s /usr/local/bin/bash

printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALL DONE.  PLEASE REBOOT YOUR SYSTEM."
