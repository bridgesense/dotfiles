#!/usr/bin/env bash

# thanks to original work by Nathaniel Maia
# this adds a simple app launcher to dmenu with caching

# uses/requires notify-send and awk

declare -A PATHS
action="${1:-query}"

# to build cache file used for the app launcher
# ./dmenu-app-launcher -build  
# to run dmenu based from new cache build
# ./dmenu-app-launcher  
# if cache file is not present, one will be built

# check we have required software
if ! hash awk find grep dmenu &>/dev/null; then
    echo -e "ERROR: This script requires: awk find grep dmenu" && exit 1
fi

main() {
    cache_file="/home/$USER/.cache/dmenu_apps"

    if [ ! -f "$cache_file" ] || [ $action == "-build" ]; then
        # base file name storage
        local names=""
        while read -r f; do
            local name=""
            if [[ "$f" == *".desktop"* ]]; then
                name="$(grep -m 1 '^Name' "$f")"
                name="${name/Name=/}"
                name="${name/ %*/}"
                # popular exceptions here
                if [[ "$name" == *"GNU Image Manipulation Program"* ]]; then
                    name="GIMP"
                fi
            fi
            if [[ $name != "" ]]; then
                n=$name
            else
                n="$(basename -- "$f")"
            fi
            # exclude some odities
            if [[ $n =~ (\.png)|(\.stp)$ ]]; then
                continue
            fi
            names+=$'\n'"$n"
            PATHS["$n"]="$f"
        done <<< "$(find -L ${PATH//:/\/ } ${XDG_DATA_DIRS//:/\/ } /home/$USER/.local/share /home/$USER/Desktop -type f -name "*.desktop" | sort -r)"
        echo "names=\"$names\"" > $cache_file; declare -A $PATHS -p >> $cache_file 
        if [ $action == "-build" ]; then
            notify-send -i "new dmenu cache built" "dmenu is ready."
            exit 0
        fi
    else 
        local names=""
        source -- "$cache_file"
    fi
    local ans="$(dmenu -i "$@" <<< "$names")"
    [[ $? != 1 && -n $ans ]] && run "$ans" || return 1
}

run() {
    local cmd
    if [[ "${PATHS["$1"]}" == *".desktop"* ]]; then
        cmd="$(grep '^Exec' "${PATHS["$1"]}")"
        cmd="${cmd/Exec=/}"
        cmd="${cmd/ %*/}"
    else
        cmd=${PATHS["$1"]}
    fi
     
    [[ $cmd ]] && $($cmd) 

    return 0
}

main "$@" &

exit 0
