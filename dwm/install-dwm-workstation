#!/usr/bin/env bash
# Fedora Workstation Setup
# WARNING: This is a personal installation script.
# Please review this script and adjust it to your needs prior to running it.
# This script is intended for a minimal Fedora Workstation installation on a Thinkpad
# run as root:
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/dwm/install-dwm-workstation > custom-fedora-setup
# $SHELL custom-fedora-setup <username>
# # # # # # # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
USER="${1:francis}"

# Run as root
# Commandline Tools
# # # # # # # # # # # # # # #
dnf update -y
dnf install -y autoconf automake git htop rsync
dnf group install -y development-tools rpm-development-tools c-development
$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"
su -c '$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"' $USER

# Install RPM Fusion
# # # # # # # # # # # # # # #
dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
dnf install -y https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

# Install supporting applications
# # # # # # # # # # # # # # #
dnf install -y @base-x
dnf install -y @Fonts gdouros-symbola-fonts fontawesome-fonts gucharmap
dnf install -y xbacklight feh sxhkd
dnf install -y xautolock asciiquarium xdotool
dnf install -y lxappearance arc-theme redshift-gtk
dnf install -y pulseaudio alsa-utils pulseaudio-utils picom
dnf install -y pulseeffects pavucontrol
dnf install -y rxvt-unicode xterm xclip
dnf install -y arandr zenity flameshot
dnf install -y gnome-keyring
dnf install -y gnome-control-center
dnf install -y NetworkManager-tui NetworkManager-wifi NetworkManager-openvpn-gnome
dnf install -y ftp telnet
dnf install -y dhcp-client iw wpa_supplicant blueman sbc
dnf install -y dunst libnotify
dnf install -y gnutls mailx wireless-tools
dnf install -y python3-httplib2 wordnet
dnf install -y aspell-en texlive-latex
dnf install -y texlive-collection-latex texlive-collection-latexextra
dnf install -y papirus-icon-theme
dnf install -y nemo
dnf install -y fuse-exfat exfat-utils libmtp libmtp-examples gvfs-mtp
dnf install -y acpi crontabs
dnf install -y firewall-config
dnf install -y system-config-printer
dnf install -y simple-scan
dnf install -y nomacs
dnf install -y gnome-disk-utility atool
dnf install -y cups hplip hplip-gui
dnf install -y policycoreutils-gui setools-console setroubleshoot
dnf install -y clamav clamav-update
dnf install -y timeshift
dnf install -y brasero

# suckless setup
# st - terminal
dnf install -y libX11-devel
su -c 'mkdir ~/lab' $USER
su -c 'git clone https://git.suckless.org/st ~/lab/st' $USER
su -c 'cd ~/lab/st && git checkout 914fb825df3bde7abdd7947e54f8bf4d2b55e34e' $USER
su -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-scrollback-20200419-72e3f6c.diff' $USER
su -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-scrollback-mouse-20191024-a2c479c.diff' $USER
su -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-alpha-0.8.2.diff' $USER
su -c 'cd ~/lab/st && git apply -3 ~/.yadrlite/dwm/st/st-gruvbox-both-alpha-20200510-0.8.3.diff' $USER
su -c 'cp ~/.yadrlite/dwm/st/config.h ~/lab/st' $USER
cd /home/$USER/lab/st && make install
make clean
# dwm - windows manager
su -c 'git clone https://git.suckless.org/dwm ~/lab/dwm' $USER
su -c 'cd ~/lab/dwm && git checkout f09418bbb6651ab4c299cfefbe1d18de401f630e' $USER
su -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-ru_gaps-20200510-6.2.diff' $USER
su -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-attachbottom-20200510-6.2.diff' $USER
su -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-rotatestack-20200510-6.2.diff' $USER
su -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-statuscolors-20200511-6.2.diff' $USER
su -c 'cd ~/lab/dwm && git apply -3 ~/.yadrlite/dwm/dwm/dwm-actualfullscreen-20200602-6.2.diff' $USER
su -c 'cp ~/.yadrlite/dwm/dwm/config.h ~/lab/dwm' $USER
cd /home/$USER/lab/dwm && make install
make clean
# dwm - dmenu for app launcher script
su -c 'git clone https://git.suckless.org/dmenu ~/lab/dmenu' $USER
su -c 'cd ~/lab/dmenu && git checkout db6093f6ec1bb884f7540f2512935b5254750b30' $USER
su -c 'cd ~/lab/dmenu && git apply -3 ~/.yadrlite/dwm/dmenu/dmenu-highlight-4.9.diff' $USER
su -c 'cp ~/.yadrlite/dwm/dmenu/config.h ~/lab/dmenu' $USER
cd /home/$USER/lab/dmenu && make install
make clean
# dwm - slock for screen locking
su -c 'git clone https://git.suckless.org/slock ~/lab/slock' $USER
su -c 'cd ~/lab/slock && git checkout 35633d45672d14bd798c478c45d1a17064701aa9' $USER
su -c 'cd ~/lab/slock && git apply -3 ~/.yadrlite/dwm/slock/slock-unlock_screen-1.4.diff' $USER
su -c 'cp ~/.yadrlite/dwm/slock/config.h ~/lab/slock' $USER
cd /home/$USER/lab/slock && make install
make clean

# install xbanish
# # # # # # # # # # # # # # #
dnf install -y libXt-devel libXfixes-devel libXi-devel
su -c 'git clone https://github.com/jcs/xbanish.git ~/lab/xbanish' $USER
su -c 'make -C ~/lab/xbanish' $USER
cd /home/$USER/lab/xbanish && make install
make clean

# copy over system start resources
# # # # # # # # # # # # # # #
su -c 'cp -f ~/.yadrlite/dwm/Xresources ~/.Xresources' $USER
cp -f ~/.yadrlite/dwm/Xresources ~/.Xresources
su -c 'mkdir -p ~/.config/scripts' $USER
su -c 'cp ~/.yadrlite/dwm/scripts/* ~/.config/scripts' $USER
su -c 'cp ~/.yadrlite/dwm/xinitrc ~/.xinitrc' $USER
su -c "cp -r ~/.yadrlite/dwm/ranger ~/.config" $USER
cp -r ~/.yadrlite/dwm/ranger ~/.config
su -c "cp -r ~/.yadrlite/dwm/nvim ~/.config" $USER
cp -r ~/.yadrlite/dwm/nvim ~/.config
sed -i '/Default Prompt/a export EDITOR=nvim\nexport PAGER=less\nalias vi="nvim"\nalias vim="nvim"\nalias urxvt="urxvt256c"' /home/$USER/.bashrc
sed -i '/Default Prompt/a export EDITOR=nvim\nexport PAGER=less\nalias vi="nvim"\nalias vim="nvim"\nalias urxvt="urxvt256c"' ~/.bashrc
# uncomment the following line to give Sudoers access to the user account
echo "pgrep 'tmux|start' || startx" >> /home/$USER/.bash_profile
# urxvt terminal font resizing
su -c 'mkdir -p ~/.urxvt/ext' $USER
su -c 'cd ~/.urxvt/ext && wget "https://raw.githubusercontent.com/simmel/urxvt-resize-font/master/resize-font"' $USER
# urxvt patch for extended color designations past 15
su -c 'cd ~/.urxvt/ext && wget "https://raw.githubusercontent.com/Roliga/urxvt-xresources-256/master/xresources-256"' $USER
# powerline font patch
su -c 'mkdir -p ~/.local/share/fonts/' $USER
su -c 'cd ~/.local/share/fonts && svn checkout https://github.com/powerline/fonts/trunk/DejaVuSansMono' $USER
fc-cache

# activate dunst
# # # # # # # # # # # # # # #
systemctl enable --user dunst.service
systemctl start --user dunst.service
su -c "cp -r ~/.yadrlite/dwm/dunst ~/.config" $USER
eval $(dbus-launch)

# low battery indication
# # # # # # # # # # # # # # #
sudo dnf install -y acpi ntpdate
(crontab -u $USER -l; echo "*/15 * * * * $SHELL /home/${USER}/.config/scripts/battery >/dev/null 2>&1") | crontab -u $USER -

# backlight fix for i915 GPU's
# to work with cbacklight script
usermod -a -G video $USER
echo "ACTION==\"add\", SUBSYSTEM==\"backlight\", KERNEL==\"intel_backlight\", RUN+=\"/bin/chgrp video /sys/class/backlight/%k/brightness\"" >> /etc/udev/rules.d/backlight.rules
echo "ACTION==\"add\", SUBSYSTEM==\"backlight\", KERNEL==\"intel_backlight\", RUN+=\"/bin/chmod g+w /sys/class/backlight/%k/brightness\"" >> /etc/udev/rules.d/backlight.rules
cp /home/$USER/.yadrlite/dwm/scripts/cbacklight /usr/bin/cbacklight

# Add "tap to click" for touchpads
# # # # # # # # # # # # # # #
sed -i '/Identifier "libinput touchpad catchall"/a \\tOption "Tapping" "on"' /usr/share/X11/xorg.conf.d/40-libinput.conf

# bluetooth headset fix for better audio quality
sed -i 's/module-bluetooth-discover/module-bluetooth-discover headset=auto/' /etc/pulse/default.pa

# help the sound (for Thinkpads)
# # # # # # # # # # # # # # #
echo "resample-method = soxr-vhq" >> /etc/pulse/daemon.conf
echo "default-sample-format = float32le" >> /etc/pulse/daemon.conf
echo "default-sample-rate = 96000" >> /etc/pulse/daemon.conf
echo "high-priority = yes" >> /etc/pulse/daemon.conf

# set timezone
# # # # # # # # # # # # # # #
timedatectl set-timezone America/Los_Angeles

# enable thinkfan
# this is a sample config for a t460
# # # # # # # # # # # # # # #
dnf install -y thinkfan
HWMONDEV=`basename /sys/devices/platform/coretemp.0/hwmon/*`
sed -i "/55)/i \
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp1_input \n\
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp2_input \n\
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp3_input \n\
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp3_input \n\
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp4_input \n\
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp1_input \n\
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp5_input \n\
hwmon /sys/devices/platform/coretemp.0/hwmon/${HWMONDEV}/temp2_input \n\
" /etc/thinkfan.conf
systemctl enable thinkfan

# install non-free firmware for compatibilty crises
 dnf install -y rpm fusion-nonfree-release-tainted
 dnf install -y \*-firmware

# install PHP essentials
# # # # # # # # # # # # # # #
dnf install -y php

# required modules for boris and phpctags
# # # # # # # # # # # # # # #
dnf install -y php-json php-readline php-process
dnf install -y nodejs nodejs-yarn ruby-devel
npm install -g grunt-cli coffee-jshint eslint js-yaml csslint
su -c 'git clone https://github.com/xcwen/phpctags.git ~/lab/phpctags' $USER
su -c 'make -C ~/lab/phpctags' $USER
cp /home/$USER/lab/phpcstags/phpctags.phar /usr/local/bin/
su -c 'gem update'
su -c 'gem install compass'

# boris (nice PHP sandbox tool)
# # # # # # # # # # # # # # #
curl -L -O https://github.com/borisrepl/boris/releases/download/v1.0.8/boris.phar
chmod +x boris.phar
mv boris.phar /usr/local/bin/boris

# PHP Parallel Lint
# # # # # # # # # # # # # # #
dnf install -y composer
sudo sed -i "s#;phar.readonly = On#phar.readonly = Off#" /etc/php.ini
systemctl restart httpd
su -c "mkdir -p ~/lab/box-phar" $USER
su -c "cd ~/lab/box-phar && curl -LSs https://box-project.github.io/box2/installer.php | php" $USER
cp /home/$USER/lab/box-phar/box.phar /usr/local/bin/box && chmod 755 /usr/local/bin/box
su -c "git clone https://github.com/JakubOnderka/PHP-Parallel-Lint.git ~/lab/PHP-Parallel-Lint" $USER
su -c "cd ~/lab/PHP-Parallel-Lint && composer install" $USER
su -c "cp ~/lab/PHP-Parallel-Lint/parallel-lint ~/lab/PHP-Parallel-Lint/parallel-lint.php" $USER
su -c "cd ~/lab/PHP-Parallel-Lint && box build" $USER
cp /home/$USER/lab/PHP-Parallel-Lint/parallel-lint.phar /usr/local/bin/parallel-lint && chmod 755 /usr/local/bin/parallel-lint

# install code editors and PHP dev tools
# # # # # # # # # # # # # # #
dnf install -y tmux the_silver_searcher ack fzf
dnf install -y tree ranger w3m w3m-img expect
dnf install -y hugo
ln -s /usr/bin/gvim /usr/bin/vim
# install ctags
sudo dnf install -y python3-docutils libseccomp-devel jansson-devel libyaml-devel libxml2-devel
su -c "cd ~/lab && git clone https://github.com/universal-ctags/ctags.git" $USER
su -c "cd ~/lab/ctags && ./autogen.sh" $USER
su -c "cd ~/lab/ctags && ./configure --program-prefix=ex" $USER
cd /home/$USER/lab/ctags && make prefix=/usr/local install && clean
# neovim
dnf install -y neovim
pip3 install pynvim
su -c "gem install neovim" $USER
su -c "gem environment" $USER
npm install -g neovim

# compiles emacs 27
# for much better speed and compatibitily
# WARNING: emacs X11 will crash with pacakge: google-noto-emoji-color-fonts
# # # # # # # # # # # # # # #
dnf install -y liblockfile-devel libotf-devel m17n-db-devel m17n-lib-devel
dnf install -y gtk3-devel ncurses-devel gnutls-devel gnutls-utils
dnf install -y libXpm-devel libxml2-devel libjpeg-turbo-devel giflib-devel libtiff-devel
dnf install -y texinfo
su -c 'git clone -b master git://git.sv.gnu.org/emacs.git ~/lab/emacs' $USER
# locks emacs into March 27th, 2020 release (stable)
su -c 'cd ~/lab/emacs && git checkout 6075a7c5ae3fa456cd099946f6e042b57e925263' $USER
sleep 1.5s
su -c 'cd ~/lab/emacs && ./autogen.sh' $USER
su -c 'cd ~/lab/emacs && ./configure --without-makeinfo --with-gnutls=ifavailable --with-mailutils' $USER
su -c 'make -C ~/lab/emacs' $USER
cd /home/$USER/lab/emacs && make install

# Support Software
dnf install -y nextcloud-client
dnf install -y gimp gimpfx-foundry gimp-save-for-web gimp-data-extras
dnf install -y libreoffice libreoffice-icon-theme-papirus
dnf install -y flatpak
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install -y flathub com.spotify.Client
flatpak install -y flathub org.signal.Signal
flatpak install -y flathub com.skype.Client
flatpak install -y flathub us.zoom.Zoom

# Install Browsers
dnf install -y chromium
# Firefox Nightly
su -c 'mkdir -p ~/Applications && cd ~/Applications' $USER
su -c 'cd ~/Applications && wget -O FirefoxSetup.tar.bz2 "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US"' $USER
su -c 'cd ~/Applications && tar xjf FirefoxSetup.tar.bz2 -C ~/Applications' $USER
su -c 'mkdir -p ~/.local/share/applications' $USER
su -c 'touch ~/.local/share/applications/firefox-nightly.desktop' $USER
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/firefox-nightly.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/firefox-nightly.desktop
printf 'Name=Firefox Nightly Browser\n' >> /home/$USER/.local/share/applications/firefox-nightly.desktop
printf "Exec=/home/$USER/Applications/firefox/firefox\n" >> /home/$USER/.local/share/applications/firefox-nightly.desktop

# install Vagrant and Virtualbox
# Warning: Secure boot may need to be disabled
dnf install -y akmods vagrant VirtualBox
su -c 'mkdir -p ~/Downloads && cd ~/Downloads && wget http://download.virtualbox.org/virtualbox/6.1.10/Oracle_VM_VirtualBox_Extension_Pack-6.1.10.vbox-extpack' $USER
echo "y" | VBoxManage extpack install --replace /home/$USER/Downloads/Oracle_VM_VirtualBox_Extension_Pack-6.1.10.vbox-extpack
firewall-cmd --permanent --zone=public --add-port=9041/tcp
setsebool -P httpd_can_network_connect on
semanage port -a -t http_port_t -p tcp 9041
# vagrant/virtualbox compatiblity fix
if ! grep Version_6_1 /usr/share/vagrant/gems/gems/vagrant-2.2.6/plugins/providers/virtualbox/driver/meta.rb; then
    sed -i '/"6.0" => Version_6_0,/a \\t\t\t"6.1" => Version_6_1,' /usr/share/vagrant/gems/gems/vagrant-2.2.6/plugins/providers/virtualbox/driver/meta.rb
    wget http://www.coter.net/upload/version_6_1.rb  -P /usr/share/vagrant/gems/gems/vagrant-2.2.6/plugins/providers/virtualbox/driver/
    sed -i '/autoload :Version_6_0/a \\t  autoload :Version_6_1, File.expand_path("../driver/version_6_1", __FILE__)' /usr/share/vagrant/gems/gems/vagrant-2.2.6/plugins/providers/virtualbox/plugin.rb
fi

# Rambox
# # # # # # # # # # # # # # #
dnf install -y  https://github.com/ramboxapp/community-edition/releases/download/0.7.3/Rambox-0.7.3-linux-x86_64.rpm

# Gargoyle (for sanity checks)
# # # # # # # # # # # # # # #
dnf install -y SDL SDL_mixer SDL_sound fluidsynth
su -c 'wget -O ~/Downloads/gargoyle.rpm https://github.com/rpmsphere/x86_64/blob/master/g/gargoyle-2015-5.4.x86_64.rpm?raw=true' $USER
dnf install -y /home/$USER/Downloads/gargoyle.rpm
su -c 'cp ~/.yadrlite/dwm/garglk.ini ~/.garglkrc' $USER

# Chess
# # # # # # # # # # # # # # #
dnf config-manager --add-repo https://copr.fedorainfracloud.org/coprs/awood/scid_vs_pc/repo/fedora-$(rpm -E %fedora)/awood-scid_vs_pc-fedora-$(rpm -E %fedora).repo
dnf install -y scid_vs_pc.x86_64 scid_vs_pc-sounds scid_vs_pc-books
# stockfish
dnf install -y stockfish
# leela
dnf install -y openblas-devel.x86_64 gtest-devel
dnf install -y ninja-build meson
su -c 'cd ~/Applications && git clone -b release/0.24 --recurse-submodules https://github.com/LeelaChessZero/lc0.git' $USER
su -c 'cd ~/Applications/lc0 && $SHELL build.sh' $USER

# pdf support
dnf install -y cups-pdf evince pdfarranger mupdf
# install Adobe Acrobat
su -c 'cd ~/Downloads && wget "ftp://ftp.adobe.com/pub/adobe/reader/unix/9.x/9.5.5/enu/AdbeRdr9.5.5-1_i486linux_enu.rpm"' $USER
dnf install -y atk.i686 avahi-libs.i686 bzip2-libs.i686 cairo.i686 cups-libs.i686
dnf install -y dbus-libs.i686 expat.i686 fontconfig.i686 freetype.i686 fribidi.i686
dnf install -y gdk-pixbuf2.i686 gdk-pixbuf2-modules.i686 gdk-pixbuf2-xlib.i686
dnf install -y gdk-pixbuf2-xlib.x86_64 glib2.i686 glibc.i686 gmp.i686 gnutls.i686
dnf install -y graphite2.i686 gtk2.i686 harfbuzz.i686 jasper-libs.i686 jbigkit-libs.i686
dnf install -y keyutils-libs.i686 krb5-libs.i686 libICE.i686 libSM.i686 libX11.i686
dnf install -y libX11-xcb.i686 libXau.i686 libXcomposite.i686 libXcursor.i686
dnf install -y libXdamage.i686 libXext.i686 libXfixes.i686 libXft.i686 libXi.i686
dnf install -y libXinerama.i686 libXrandr.i686 libXrender.i686 libXt.i686 libXxf86vm.i686
dnf install -y libblkid.i686 libcap.i686 libcom_err.i686 libdatrie.i686 libdrm.i686
dnf install -y libffi.i686 libgcc.i686 libgcrypt.i686 libglvnd.i686 libglvnd-glx.i686
dnf install -y libgpg-error.i686 libidn.i686 libidn2.i686 libjpeg-turbo.i686 libmount.i686
dnf install -y libpciaccess.i686 libpng.i686 libselinux.i686 libsepol.i686 libstdc++.i686
dnf install -y libtasn1.i686 libthai.i686 libtiff.i686 libunistring.i686 libuuid.i686
dnf install -y libverto.i686 libxcb.i686 libxcrypt.i686 libxml2.i686 libxshmfence.i686
dnf install -y lz4-libs.i686 mesa-libGL.i686 mesa-libGLU.i686 mesa-libGLU.x86_64
dnf install -y mesa-libglapi.i686 nettle.i686 openssl-libs.i686 p11-kit.i686 pango.i686
dnf install -y pangox-compat.i686 pangox-compat.x86_64 pcre.i686 pcre2.i686 pixman.i686
dnf install -y systemd-libs.i686 xz-libs.i686 zlib.i686 libidn.x86_64
dnf install -y libidn.i686 coreutils.x86_64 libidn1.34.i686
rpm -i /home/$USER/Downloads/AdbeRdr*rpm

# handle ACPI wake-up settings for none platform devices
cp -f /home/$USER/.yadrlite/src/org/system/acpi-wake.service /etc/systemd/system
chmod 777 /etc/systemd/system/acpi-wake.service
systemctl start acpi-wake.service
systemctl enable acpi-wake.service

# permissions, status and boot configuration
# # # # # # # # # # # # # # #
find /home/$USER/.config -type d -exec chmod 0755 {} \;
find /home/$USER/.config -type f -exec chmod 0644 {} \;
find /home/$USER/.config -name "*" -execdir chmod u+x {} +
plymouth-set-default-theme -R bgrt

# add manual entries
su -c 'touch ~/.local/share/applications/screensaver.desktop' $USER
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/screensaver.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/screensaver.desktop
printf 'Name=Start Screen Saver\n' >> /home/$USER/.local/share/applications/screensaver.desktop
printf "Exec=/home/$USER/.config/scripts/screen-saver\n" >> /home/$USER/.local/share/applications/screensaver.desktop
su -c 'touch ~/.local/share/applications/hibernate.desktop' $USER
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/hibernate.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/hibernate.desktop
printf 'Name=Hibernate Now\n' >> /home/$USER/.local/share/applications/hibernate.desktop
printf "Exec=/home/$USER/.config/scripts/hibernate\n" >> /home/$USER/.local/share/applications/hibernate.desktop
su -c 'touch ~/.local/share/applications/reboot.desktop' $USER
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/reboot.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/reboot.desktop
printf 'Name=Restart Now\n' >> /home/$USER/.local/share/applications/reboot.desktop
printf "Exec=/home/$USER/.config/scripts/reboot-confirm\n" >> /home/$USER/.local/share/applications/reboot.desktop
su -c 'touch ~/.local/share/applications/shutdown.desktop' $USER
printf '[Desktop Entry] \n' >> /home/$USER/.local/share/applications/shutdown.desktop
printf 'Type=Application\n' >> /home/$USER/.local/share/applications/shutdown.desktop
printf 'Name=Shutdown Now\n' >> /home/$USER/.local/share/applications/shutdown.desktop
printf "Exec=/home/$USER/.config/scripts/shutdown-confirm\n" >> /home/$USER/.local/share/applications/shutdown.desktop

# Install Multimedia Codecs
dnf install -y rpmfusion-free-release-tainted
dnf install -y vlc devedeng
dnf install -y gstreamer1-plugins-{bad-\*,good-\*,base} gstreamer1-plugin-openh264 gstreamer1-libav --exclude=gstreamer1-plugins-bad-free-devel
dnf install -y lame\* --exclude=lame-devel
dnf install -y ffmpeg ffmpeg-libs compat-ffmpeg28
dnf install -y lsdvd libdvdnav libdvdread libdvdcss
dnf install -y java-1.8.0-openjdk
dnf install -y libbluray libbluray-utils libbluray-bdj

# Bluray Playback
# # # # # # # # # # # # # # #
dnf install -y ffmpeg-devel openssl-devel qt5-devel
su -c 'cd ~/lab && wget http://www.makemkv.com/download/makemkv-oss-1.15.1.tar.gz' $USER
su -c 'cd ~/lab && tar xpf makemkv-oss-1.15.1.tar.gz' $USER
su -c 'cd ~/lab/makemkv-oss-1.15.1 && ./configure' $USER
su -c 'make -C ~/lab/makemkv-oss-1.15.1' $USER
cd /home/$USER/lab/makemkv-oss-1.15.1 && make install
su -c 'cd ~/lab && wget http://www.makemkv.com/download/makemkv-bin-1.15.1.tar.gz' $USER
su -c 'cd ~/lab && tar xpf makemkv-bin-1.15.1.tar.gz' $USER
su -c 'make -C ~/lab/makemkv-bin-1.15.1' $USER
cd /home/$USER/lab/makemkv-bin-1.15.1 && make install

# if DVD's don't work try running regionset from comandline
# and then deleteing the ~/.dvdcss directory
# dnf install regionset
# regionset /dev/sr0
# rm ~/.dvdcss

printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALL DONE.  PLEASE REBOOT YOUR SYSTEM."
