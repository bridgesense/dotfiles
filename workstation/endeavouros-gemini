#!/usr/bin/env bash
# This script is just a personal snapshot of my arch workstation.
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/workstation/endeavouros-gemini > ~/install
# bash install
# # # # # # # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
USER="${1:francis}"
LOGFILE='workstation-installation.log'

# Functions
# # # # # # # # # # # # # # #
function log {
	if [ -f "$LOGFILE" ]; then
		echo $1 >>$LOGFILE
	else
		echo $1 >$LOGFILE
	fi
}

function install {
	arr=("$@")
	_type=
	if [[ "$(declare -p arr)" =~ "declare -a" ]]; then
		for package in "${arr[@]}"; do
			if [[ $package == "package" ]]; then
				_type=$package
				continue
			fi
			if [[ $package == "flatpak" ]]; then
				_type=$package
				continue
			fi
			cnt=3
			pacname=$(echo $package | sed 's/^[^/]*\///')
			while [ $cnt -gt 0 ]; do
				if pacman -Qqe | grep $pacname; then
					break
				else
					if [[ $_type == "flatpak" ]]; then
						flatpak install flathub --noninteractive -y $package
						break
					else
						yay -S --noconfirm $package
					fi
				fi
				let "cnt-=1"
			done
			if ! pacman -Qqe | grep $pacname && [[ $_type != "flatpak" ]]; then
				log "There was a problem installing ${package}.  Please make sure this package exists."
			fi
		done
	else
		log "Warning! Passed variable is not an array".
	fi
}

log "installing commandline tools"
yay --noconfirm
install package extra/git-lfs extra/subversion
install package core/base-devel endeavouros/nvidia-inst
install package extra/ack extra/ctags extra/neovim extra/ripgrep
install package extra/python-pynvim extra/lazygit extra/xclip
install package core/python extra/python-pip extra/ruby
install package extra/php core/perl extra/maven extra/composer
install package core/net-tools extra/nmap
install package aur/fd-git
install package aur/dmg2img
install package aur/caffeine-ng

# setting up nodejs
install package extra/nodejs extra/yarn
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
source ~/.bashrc && nvm install 16.14.0
npm install npm@latest
npm install --save-dev grunt-cli gulp gulp-cli csslint typescript@3.0 typescript-language-server intelephense yaml-lint eslint-plugin-toml eslint-plugin-markdown golangci-lint vscode-css-languageserver-bin js-beautify unified-language-server eslint emmet-ls babel-eslint typescript-lsp coffeescript coffeelint

# install fonts
install package extra/ttf-noto-nerd

# syncterm
# NOTE: Had some issues with aur
# thanks to MeaTLoTioN for this alternative script
# https://www.erb.pw/how-to-install-syncterm-for-linux-from-source/
install package libncurses5-dev libncursesw5-dev gcc libsdl1.2-dev
cd ~/lab
wget http://syncterm.bbsdev.net/syncterm-src.tgz
tar xvzf syncterm-src.tgz
D=$(ls -1hrtd sync*/ | tail -1 | sed 's/\/$//g')
cd ${D}/src/syncterm
st_path=$(pwd | sed 's/\/syncterm$//g')
make SRC_ROOT=$st_path
sudo make install

# Installing configuration
# # # # # # # # # # # # # # #
log "installing custom configuration"
wget https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup
bash setup
cp -f ~/.yadrlite/workstation/Xresources ~/.Xresources
cp -r ~/.yadrlite/workstation/nvim ~/.config
cp -r ~/.yadrlite/workstation/kitty ~/.config
cp -r ~/.yadrlite/workstation/ranger ~/.config
cp -r ~/.yadrlite/workstation/fonts ~/.local/share
find ~/.config -type d -exec chmod 0755 {} \;
find ~/.config -type f -exec chmod 0644 {} \;
find ~/.config -name "*.sh" -execdir chmod u+x {} +

# improve sound
touch ~/.config/pulse/daemon.conf
printf "high-priority = yes\n\
  realtime-scheduling = yes\n\
  realtime-priority = 9\n\
  nice-level = -11\n\
  \n\
  default-sample-format = s32le\n\
  default-sample-rate = 192000\n\
  resample-method = speex-float-5\n\
  \n\
  default-sample-channels = 2\n\
  remixing-produce-lfe = no\n\
  remixing-consume-lfe = yes\n\
  \n\
  avoid-resampling = no\n\
  " >>~/.config/pulse/daemon.conf

# Troubleshooting
# # # # # # # # # # # # # # #

# installs Endeavouros Splash screens
install package aur/plymouth-git aur/plymouth-theme-endeavouros
#sudo sed -i '$ s/$/ splash/' /etc/kernel/cmdline
#sudo reinstall-kernels

# enable ollama server
sudo systemctl enable ollama

# enable blutooth devices
sudo systemctl enable bluetooth

# lampready patch
# echo "net.ipv4.ip_unprivileged_port_start=0" >/etc/sysctl.d/05-expose-privileged.conf
# sysctl --system

# nvidia support
# nvidia-inst -p --32
# prime-run <application>

# to install hp setup
# tap the wifi icon on the printer and obtain the printer's ip address
# use the ip address in the following command
# sudo hp-setup -a <ip_address>

# clean everything
yay -Scc --noconfirm

log "Installation complete.  Please reboot your system."
printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALL DONE.  PLEASE REBOOT YOUR SYSTEM."
