#!/usr/bin/env bash
# This script is just a personal snapshot of my arch workstation.
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/workstation/endeavouros-gemini > ~/install
# NOTE: There are additional settings under the troublehsooting section.
# bash install
# # # # # # # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
# USER="${1:francis}"
LOGFILE='workstation-installation.log'

# Functions
# # # # # # # # # # # # # # #
function log {
  if [ -f "$LOGFILE" ]; then
    echo $1 >>$LOGFILE
  else
    echo $1 >$LOGFILE
  fi
}

function install {
  arr=("$@")
  _type=
  if [[ "$(declare -p arr)" =~ "declare -a" ]]; then
    for package in "${arr[@]}"; do
      if [[ $package == "package" ]]; then
        _type=$package
        continue
      fi
      if [[ $package == "flatpak" ]]; then
        _type=$package
        continue
      fi
      cnt=3
      pacname=$(echo $package | sed 's/^[^/]*\///')
      while [ $cnt -gt 0 ]; do
        if pacman -Qqe | grep $pacname; then
          break
        else
          if [[ $_type == "flatpak" ]]; then
            flatpak install flathub --noninteractive -y $package
            break
          else
            yay -S --noconfirm $package
          fi
        fi
        let "cnt-=1"
      done
      if ! pacman -Qqe | grep $pacname && [[ $_type != "flatpak" ]]; then
        log "There was a problem installing ${package}.  Please make sure this package exists."
      fi
    done
  else
    log "Warning! Passed variable is not an array".
  fi
}

log "installing commandline tools"
yay --noconfirm
install package extra/git-lfs extra/subversion
install package core/base-devel endeavouros/nvidia-inst
install package extra/ack extra/ctags extra/neovim
install package extra/ripgrep
install package extra/python-pynvim extra/lazygit extra/xclip
install package core/python extra/python-pip extra/ruby
install package extra/php core/perl extra/maven extra/composer
install package core/net-tools
install package extra/nmap extra/partitionmanager
install package extra/ranger extra/kitty extra/emacs extra/tmux
install package extra/imlib2
install package extra/nvtop extra/htop
install package extra/aria2 extra/yt-dlp
install package extra/zip extra/p7zip extra/unrar
install package extra/clamav
install package extra/krita extra/krita-plugin-gmic
install package extra/gimp extra/gimp-plugin-gmic
install package extra/libreoffice-fresh
install package extra/webkit2gtk
install package extra/sdl2
install package extra/sdl12-compat
install package extra/sdl2_mixer extra/sdl2_ttf extra/sdl2_image extra/sdl2_net extra/sdl_sound
install package extra/sdl_mixer extra/sdl_ttf extra/sdl_image extra/sdl_net
install package extra/podman extra/buildah
install package extra/catatonit
install package extra/pdfarranger extra/simple-scan
install package extra/texlive-bin
install package multilib/wine multilib/winetricks multilib/steam
install package extra/dosbox extra/virtualbox
install package aur/dmg2img
install package aur/caffeine-ng
install package aur/google-chrome

# setting up nodejs
install package extra/nodejs extra/yarn
install package extra/gulp extra/grunt-cli
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
sleep 5
source ~/.bashrc
nvm install v16.14.0
sleep 5
npm install --location=global --save-dev grunt-cli gulp gulp-cli csslint typescript@3.0 typescript-language-server intelephense yaml-lint eslint-plugin-toml eslint-plugin-markdown golangci-lint vscode-css-languageserver-bin js-beautify unified-language-server eslint emmet-ls babel-eslint typescript-lsp coffeescript coffeelint

# install fonts
install package extra/ttf-noto-nerd extra/ttf-firacode-nerd

# syncterm
# NOTE: Had some issues with aur version
# thanks to MeaTLoTioN for this alternative script
# https://www.erb.pw/how-to-install-syncterm-for-linux-from-source/
mkdir -p ~/lab
cd ~/lab
wget http://syncterm.bbsdev.net/syncterm-src.tgz
tar xvzf syncterm-src.tgz
D=$(ls -1hrtd sync*/ | tail -1 | sed 's/\/$//g')
cd ${D}/src/syncterm
st_path=$(pwd | sed 's/\/syncterm$//g')
make SRC_ROOT=$st_path
sudo make install

# Installing configuration
# # # # # # # # # # # # # # #
log "installing custom configuration"
wget https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup
bash setup
cp -f ~/.yadrlite/workstation/Xresources ~/.Xresources
cp -r ~/.yadrlite/workstation/nvim ~/.config
cp -r ~/.yadrlite/workstation/kitty ~/.config
cp -r ~/.yadrlite/workstation/ranger ~/.config
find ~/.config -type d -exec chmod 0755 {} \;
find ~/.config -type f -exec chmod 0644 {} \;
find ~/.config -name "*.sh" -execdir chmod u+x {} +

# improve sound
touch ~/.config/pulse/daemon.conf
printf "high-priority = yes\n\
  realtime-scheduling = yes\n\
  realtime-priority = 9\n\
  nice-level = -11\n\
  \n\
  default-sample-format = s32le\n\
  default-sample-rate = 192000\n\
  resample-method = speex-float-5\n\
  \n\
  default-sample-channels = 2\n\
  remixing-produce-lfe = no\n\
  remixing-consume-lfe = yes\n\
  \n\
  avoid-resampling = no\n\
  " >>~/.config/pulse/daemon.conf

# Troubleshooting
# # # # # # # # # # # # # # #

# quiet startup (for systemd-boot)
# sudo sed -i '$ s/$/ quiet/' /etc/kernel/cmdline
# sudo reinstall-kernels

# quiet startup (for grub)
# sudo sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT="quiet"/' /etc/default/grub
# sudo grub-mkconfig -o /boot/grub/grub.cfg

# enable ollama server
curl -fsSL https://ollama.com/install.sh | sh
sudo systemctl enable ollama

# enable blutooth devices
sudo systemctl enable bluetooth

# clamav update
sudo freshclam

# lampready patch
# (run as root) echo "net.ipv4.ip_unprivileged_port_start=0" >/etc/sysctl.d/05-expose-privileged.conf
# sudo sysctl --system
# sudo firewall-cmd --zone=public --add-port=9003/tcp --permanent
# sudo firewall-cmd --reload

# nvidia support
# nvidia-inst -p --32
# prime-run <application>

# to install hp setup
# tap the wifi icon on the printer and obtain the printer's ip address
# use the ip address in the following command
# sudo hp-setup -a <ip_address>

# git config --global user.email "user@domain.com"
# git config --global user.name "First Last"

# clean everything
yay -Scc --noconfirm

log "Installation complete.  Please reboot your system."
printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALL DONE\r"
printf "Review the workstation-installation.login and address any uninstalled packages noted.\r"
printf "PLEASE REBOOT YOUR SYSTEM."
