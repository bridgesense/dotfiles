#!/usr/bin/env bash
# This script is just a personal snapshot of my ubuntu-mate workstation.
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/workstation/ubuntu-mate > ~/install
# bash install <username>
# # # # # #Shutdown # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
USER="${1:francis}"
LOGFILE='/root/workstation-installation.log'

# Functions
# # # # # # # # # # # # # # #
function log {
    if [ -f "$LOGFILE" ]; then
        echo $1 >> $LOGFILE
    else
        echo $1 > $LOGFILE
    fi
}

function install {
    arr=("$@")
    _type=
    if [[ "$(declare -p arr)" =~ "declare -a" ]]; then
        for package in "${arr[@]}"; do
            if [[ $package == "package" ]]; then
                _type=$package
                continue
            fi
            if [[ $package == "flatpak" ]]; then
                _type=$package
                continue
            fi
	    cnt=3
            while [ $cnt -gt 0 ]; do
		if dpkg --get-selections | grep $package; then
                    break;
                else
                    if [[ $_type == "flatpak" ]]; then
                        flatpak install flathub --noninteractive -y $package
                        break;
		    else
                        apt-get install -y $package
                    fi
                fi
                let "cnt-=1"
            done
            if dpkg --get-selections | grep $package && [[ $_type != "flatpak" ]]; then
                log "There was a problem installing ${package}.  Please make sure this package exists."
            fi
        done
    else
        log "Warning! Passed variable is not an array".
    fi
}

# Run as root
# Commandline Tools
# # # # # # # # # # # # # # #
log "installing commandline tools"
apt-get update
install package git subversion curl
install package build-essential
install package ack silversearcher-ag
install package isync msmtp pass universal-ctags
install package python3 python3-pip ruby-full openjdk-18-jre-headless
install package php-cli perl maven
install package golang bison php-pear composer
pear channel-update doc.php.net

# fixes bluetooth pairing
systemctl enable bluetooth.service
sed -i  's@#AutoEnable.*@AutoEnable\=true@g' /etc/bluetooth/main.conf
sed -i  's@#ReconnectAttempts.*@ReconnectAttempts\=7@g' /etc/bluetooth/main.conf
sed -i  's@#FastConnectable.*@FastConnectable\=true@g' /etc/bluetooth/main.conf

# exchanges the esc and caps keys
# See Keyboard Preferences > Caps Lock behavoir > Swap Esc and Caps Lock

# to install hp setup
# tap the wifi icon on the printer and obtain the printer's ip address
# use the ip address in the following command
# sudo hp-setup -a <ip_address>

# setting up nodejs
curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -
apt-get update
install package nodejs gnupg2 gnupg wget
npm install --location=global n
n stable
npm install --location=global npm@latest
npm install --location=global npm
npm install --location=global grunt-cli eslint csslint gulp-sass typescript typescript-language-server intelephense coffeelint yaml-lint eslint-plugin-toml eslint-plugin-markdown golangci-lint vscode-css-languageserver-bin js-beautify
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
npm install --location=global yarn
ln -s /usr/local/lib/node_modules/yarn/bin/yarn /usr/bin/yarn
npm install --location=global gulp gulp-cli gulp-util --save-dev
npm i --package-lock-only
npm audit fix --force

$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"
su -c '$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"' $USER
gem install bundler --pre 
gem update --no-user-install

# install coding tools
install package libfreetype-dev libfontconfig-dev libxcb1-dev tmux xclip
python3 -m pip install --upgrade pip
su -c "pip3 install pynvim" $USER
su -c "pip3 install neovim" $USER
gem install --no-user-install neovim
gem install --no-user-install compass

# addtiional python tools
su -c "pip3 install virtualenv" $USER

# nnn
install package nnn tree mediainfo
su -c 'mkdir -p /home/$USER/.config/nnn/plugins' $USER
su -c 'cd /home/$USER/.config/nnn/plugins && $SHELL -c "`curl -s -S -L https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs`"' $USER

# go
install package golang-go

# hugo
install package hugo

# dmg2img for mac vm
install package dmg2img

# install supplementary packages
install package network-manager-openvpn network-manager-openconnect
install package aspell-en textlive-full papirus-icon-theme
install package clamav clamav-update brasero youtube-dl w3m w3m-img
install package ftp telnet hplip hplip-gui simple-scan
install package neovim emacs-gtk gnutls-bin maildir-utils imagemagick mu4e gnupg2
install package gcolor3 flameshot transmission
install package podman buildah gnome-boxes gnome-disk-utility
install package stacer timeshift
install package google-chrome-stable gnome-software gnome-software-plugin-flatpak
install package nextcloud-desktop

# gimp
log "installing gimp and plugins"
install package gimp gimp-data-extras gimp-plugin-registry gimp-gluas gimp-gmic

# install video, audio codecs and tools
log "installing codecs and players"
install package ubuntu-restricted-extras
install package vlc libaacs0 libbluray-bdj libbluray2
install musescore obs-studio
install package libdvd-pkg
dpkg-reconfigure libdvd-pkg
su -c 'mkdir -p /home/$USER/.config/aacs' $USER
su -c 'cd /home/$USER/.config/aacs/ && wget http://vlc-bluray.whoknowsmy.name/files/KEYDB.cfg' $USER

# firewall
ufw enable
ufw allow 9003/tcp

# documentation
# # # # # # # # # # # # # # #
install package rsyslog-doc

# add desktop applications
# # # # # # # # # # # # # # #
su -c 'touch ~/.local/share/applications/nnn.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=nnn\n\
Icon=caja-actions\n\
Exec=mate-terminal -e nnn\n\
" >> /home/$USER/.local/share/applications/nnn.desktop

su -c 'touch ~/.local/share/applications/shutdown.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Shutdown\n\
Icon=gshutdown\n\
Exec=mate-session-save --shutdown-dialog\n\
" >> /home/$USER/.local/share/applications/shutdown.desktop

su -c 'touch ~/.local/share/applications/logout.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Logout\n\
Icon=gnome-lockscreen\n\
Exec=mate-session-save --logout-dialog\n\
" >> /home/$USER/.local/share/applications/logout.desktop

su -c 'touch ~/.local/share/applications/mpv.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=mpv Media Player\n\
Comment=Play movies and songs\n\
Icon=mpv\n\
TryExec=mpv\n\
Exec=mpv --player-operation-mode=pseudo-gui -- %U\n\
Terminal=false\n\
Categories=AudioVideo;Audio;Video;Player;TV;\n\
MimeType=application/ogg;application/x-ogg;application/mxf;application/sdp;application/smil;application/x-smil;application/streamingmedia;application/x-streamingmedia;application/vnd.rn-realmedia;application/vnd.rn-realmedia-vbr;audio/aac;audio/x-aac;audio/vnd.dolby.heaac.1;audio/vnd.dolby.heaac.2;audio/aiff;audio/x-aiff;audio/m4a;audio/x-m4a;application/x-extension-m4a;audio/mp1;audio/x-mp1;audio/mp2;audio/x-mp2;audio/mp3;audio/x-mp3;audio/mpeg;audio/mpeg2;audio/mpeg3;audio/mpegurl;audio/x-mpegurl;audio/mpg;audio/x-mpg;audio/rn-mpeg;audio/musepack;audio/x-musepack;audio/ogg;audio/scpls;audio/x-scpls;audio/vnd.rn-realaudio;audio/wav;audio/x-pn-wav;audio/x-pn-windows-pcm;audio/x-realaudio;audio/x-pn-realaudio;audio/x-ms-wma;audio/x-pls;audio/x-wav;video/mpeg;video/x-mpeg2;video/x-mpeg3;video/mp4v-es;video/x-m4v;video/mp4;application/x-extension-mp4;video/divx;video/vnd.divx;video/msvideo;video/x-msvideo;video/ogg;video/quicktime;video/vnd.rn-realvideo;video/x-ms-afs;video/x-ms-asf;audio/x-ms-asf;application/vnd.ms-asf;video/x-ms-wmv;video/x-ms-wmx;video/x-ms-wvxvideo;video/x-avi;video/avi;video/x-flic;video/fli;video/x-flc;video/flv;video/x-flv;video/x-theora;video/x-theora+ogg;video/x-matroska;video/mkv;audio/x-matroska;application/x-matroska;video/webm;audio/webm;audio/vorbis;audio/x-vorbis;audio/x-vorbis+ogg;video/x-ogm;video/x-ogm+ogg;application/x-ogm;application/x-ogm-audio;application/x-ogm-video;application/x-shorten;audio/x-shorten;audio/x-ape;audio/x-wavpack;audio/x-tta;audio/AMR;audio/ac3;audio/eac3;audio/amr-wb;video/mp2t;audio/flac;audio/mp4;application/x-mpegurl;video/vnd.mpegurl;application/vnd.apple.mpegurl;audio/x-pn-au;video/3gp;video/3gpp;video/3gpp2;audio/3gpp;audio/3gpp2;video/dv;audio/dv;audio/opus;audio/vnd.dts;audio/vnd.dts.hd;audio/x-adpcm;application/x-cue;audio/m3u;\n\
X-KDE-Protocols=ftp,http,https,mms,rtmp,rtsp,sftp,smb\n\
Keywords=mpv;media;player;video;audio;tv;\n\
NoDisplay=false\n\
" >> /home/$USER/.local/share/applications/mpv.desktop

su -c 'touch ~/.local/share/applications/mpv_dvd.desktop' $USER
printf "[Desktop Entry]\n\
Categories=AudioVideo;Audio;Video;Player;TV;\n\
Exec=mpv dvd://\n\
Icon=mpv\n\
MimeType=\n\
Name=Play DVD in mpv Media Player\n\
StartupNotify=true\n\
Terminal=false\n\
Type=Application\n\
" >> /home/$USER/.local/share/applications/mpv_dvd.desktop

su -c 'touch ~/.local/share/applications/mpv_bluray.desktop' $USER
printf "[Desktop Entry]\n\
Categories=AudioVideo;Audio;Video;Player;TV;\n\
Exec=mpv bd://\n\
Icon=mpv\n\
MimeType=\n\
Name=Play Bluray in mpv Media Player\n\
StartupNotify=true\n\
Terminal=false\n\
Type=Application\n\
" >> /home/$USER/.local/share/applications/mpv_bluray.desktop

# Installing configuration
# # # # # # # # # # # # # # #
log "installing custom configuration"
$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"
su -c '$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"' $USER
su -c 'cp -f /home/$USER/.yadrlite/workstation/Xresources /home/$USER/.Xresources' $USER
cp -f ~/.yadrlite/workstation/Xresources ~/.Xresources
su -c "cp -r /home/$USER/.yadrlite/workstation/nvim /home/$USER/.config" $USER
cp -r ~/.yadrlite/workstation/nvim ~/.config
find /home/$USER/.config -type d -exec chmod 0755 {} \;
find /home/$USER/.config -type f -exec chmod 0644 {} \;
find /home/$USER/.config -name "*.sh" -execdir chmod u+x {} +

# Adds Nerdfonts DejaVuSansMono
su -c 'mkdir -p ~/.local/share/fonts/' $USER
su -c 'cd /home/$USER/.local/share/fonts && svn checkout --non-interactive https://github.com/ryanoasis/nerd-fonts/trunk/patched-fonts/DejaVuSansMono' $USER
su -c 'cd /home/$USER/.local/share/fonts && svn checkout --non-interactive https://github.com/ryanoasis/nerd-fonts/trunk/patched-fonts/Inconsolata' $USER
su -c 'cd /home/$USER/.local/share/fonts && svn checkout --non-interactive https://github.com/ryanoasis/nerd-fonts/trunk/patched-fonts/FiraCode' $USER

# misc sanity improvements
git config --global core.askpass ""

# theme adjustments
sed -i  's@#f7f7f7@#d3869b@g' /usr/share/themes/Yaru-dark/metacity-1/metacity-theme-1.xml

# improve sound
su -c 'touch ~/.config/pulse/daemon.conf' $USER
printf "high-priority = yes\n\
realtime-scheduling = yes\n\
realtime-priority = 9\n\
nice-level = -11\n\
\n\
default-sample-format = s32le\n\
default-sample-rate = 192000\n\
resample-method = speex-float-5\n\
\n\
default-sample-channels = 2\n\
remixing-produce-lfe = no\n\
remixing-consume-lfe = yes\n\
\n\
avoid-resampling = no\n\
" >> /home/$USER/.config/pulse/daemon.conf

# swap snapd for flatpak
snap remove --purge firefox
install package flatpak
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
install flatpak us.zoom.Zoom org.stellarium.Stellarium org.mozilla.firefox
apt-get remove -y --purge snapd gnome-software-plugin-snap

log "Installation complete.  Please reboot your system."
printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALL DONE.  PLEASE REBOOT YOUR SYSTEM."
