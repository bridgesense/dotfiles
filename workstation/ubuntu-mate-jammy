#!/usr/bin/env bash
# This script is just a personal snapshot of my ubuntu-mate workstation.
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/workstation/ubuntu-mate-jammy > ~/install
# bash install <username>
# # # # # #Shutdown # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
USER="${1:francis}"
LOGFILE='/root/workstation-installation.log'

# Functions
# # # # # # # # # # # # # # #
function log {
    if [ -f "$LOGFILE" ]; then
        echo $1 >> $LOGFILE
    else
        echo $1 > $LOGFILE
    fi
}

function install {
    arr=("$@")
    _type=
    if [[ "$(declare -p arr)" =~ "declare -a" ]]; then
        for package in "${arr[@]}"; do
            if [[ $package == "package" ]]; then
                _type=$package
                continue
            fi
            if [[ $package == "flatpak" ]]; then
                _type=$package
                continue
            fi
	    cnt=3
            while [ $cnt -gt 0 ]; do
		if dpkg --get-selections | grep $package; then
                    break;
                else
                    if [[ $_type == "flatpak" ]]; then
                        flatpak install flathub --noninteractive -y $package
                        break;
		    else
                        apt-get install -y $package
                    fi
                fi
                let "cnt-=1"
            done
            if dpkg --get-selections | grep $package && [[ $_type != "flatpak" ]]; then
                log "There was a problem installing ${package}.  Please make sure this package exists."
            fi
        done
    else
        log "Warning! Passed variable is not an array".
    fi
}

# Run as root
# Commandline Tools
# # # # # # # # # # # # # # #
log "installing commandline tools"
apt-get update
install package curl wget git git-lfs subversion
install package apt-transport-https gnupg2 software-properties-common  
install package build-essential
install package libfreetype-dev libfontconfig-dev libxcb1-dev tmux xclip
install package python3-neovim python3-pynvim
install package ack silversearcher-ag
install package isync msmtp pass universal-ctags
install package python3 python3-pip ruby-full openjdk-18-jre-headless
install package php perl maven
install package golang-go bison php-pear hugo
install package net-tools nmap dmg2img
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -r "unlink('composer-setup.php');"
pear channel-update doc.php.net

# fixes bluetooth pairing
systemctl enable bluetooth.service
sed -i  's@#AutoEnable.*@AutoEnable\=true@g' /etc/bluetooth/main.conf
sed -i  's@#ReconnectAttempts.*@ReconnectAttempts\=7@g' /etc/bluetooth/main.conf
sed -i  's@#FastConnectable.*@FastConnectable\=true@g' /etc/bluetooth/main.conf

# exchanges the esc and caps keys
# See Keyboard Preferences > Caps Lock behavoir > Swap Esc and Caps Lock

# to install hp setup
# tap the wifi icon on the printer and obtain the printer's ip address
# use the ip address in the following command
# sudo hp-setup -a <ip_address>

# setting up nodejs
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
apt-get update
install package nodejs
curl -L https://www.npmjs.com/install.sh | sh
npm install --location=global npm@latest
npm install --location=global grunt-cli csslint typescript typescript-language-server intelephense coffeelint yaml-lint eslint-plugin-toml eslint-plugin-markdown golangci-lint vscode-css-languageserver-bin js-beautify unified-language-server eslint emmet-ls babel-eslint typescript-lsp
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
source ~/.bashrc
nvm install --lts
curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg >/dev/null
echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
apt-get update
install package yarn 

# install fonts
install package fonts-noto fontforge
printf "<?xml version=\"1.0\"?>\n\
<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n\
<fontconfig>\n\
  <dir>/usr/share/texlive/texmf-dist/fonts/opentype</dir>\n\
</fontconfig>n\
" >> /etc/fonts/conf.avail/65-texlive-fontconfig.conf
ln -s /etc/fonts/conf.avail/65-texlive-fontconfig.conf /etc/fonts/conf.d/65-texlive-fontconfig.conf
fc-cache -f -v

# go

# hugo

# dmg2img for mac vm

# install supplementary packages
install package network-manager-openvpn network-manager-openconnect
install package aspell-en texlive-full papirus-icon-theme
install package clamav clamav-update brasero youtube-dl w3m w3m-img
install package ftp telnet hplip hplip-gui simple-scan
install package neovim gnutls-bin maildir-utils imagemagick gnupg2
install package gcolor3 flameshot transmission
install package podman buildah gnome-boxes gnome-disk-utility
install package gnome-software gnome-software-plugin-flatpak
install package nextcloud-desktop fontforge caffeine
install package libreoffice 
install package obs-studio kdenlive audacity
install package pdfarranger wordnet

# gimp
log "installing gimp and plugins"
install package gimp gimp-data-extras gimp-plugin-registry gimp-gluas gimp-gmic gimp-gap 

# emacs
cd ~/lab
git clone git://git.sv.gnu.org/emacs.git -b emacs-27
cd emacs
bash autogen.sh
bash configure --without-makeinfo --with-gntls=ifavailable --with-mailutils
make
make install

# install mu4e
log "installing emacs and plugins"
apt-get remove -y --autoremove emacs emacs-common
install package autoconf meson libgmime-3.0-dev libxapian-dev libxaw7-dev libtiff5-dev libgtk2.0-dev libgif-dev libgnutls28-dev libncurses-dev cmake guile-3.0-dev
mkdir -p ~/lab
cd ~/lab
git clone https://github.com/djcb/mu.git -b release/1.8
bash autogen.sh
ninja -C build
make install

# syncterm
# thanks to MeaTLoTioN
# https://www.erb.pw/how-to-install-syncterm-for-linux-from-source/
install package libncurses5-dev libncursesw5-dev gcc libsdl1.2-dev
cd ~/lab
wget http://syncterm.bbsdev.net/syncterm-src.tgz
tar xvzf syncterm-src.tgz
D=$(ls -1hrtd sync*/|tail -1|sed 's/\/$//g')
cd ${D}/src/syncterm
st_path=$(pwd | sed 's/\/syncterm$//g')
make SRC_ROOT=$st_path
make install

# install video, audio codecs and tools
log "installing codecs and players"
install package ubuntu-restricted-extras
install package vlc libaacs0 libbluray-bdj libbluray2
install package musescore obs-studio audacity vlc* mpv rhythmbox

# play/pause override
# playerctl --all-players play-pause
install package playerctld

install package libdvd-pkg
dpkg-reconfigure libdvd-pkg
su -c "mkdir -p /home/$USER/.config/aacs" $USER
su -c "cd /home/$USER/.config/aacs/ && wget http://vlc-bluray.whoknowsmy.name/files/KEYDB.cfg" $USER

#yt-dlp
wget https://github.com/yt-dlp/yt-dlp/releases/download/2023.01.06/yt-dlp_linux -O /usr/bin/yt-dlp
chmod +x /usr/bin/yt-dlp

# lampready patch
apt-get remove -y apache2 --purge
echo "net.ipv4.ip_unprivileged_port_start=0" > /etc/sysctl.d/05-expose-privileged.conf
sysctl --system

# firewall
ufw enable
ufw allow 9003/tcp

# documentation
# # # # # # # # # # # # # # #
install package rsyslog-doc

# add desktop applications
# # # # # # # # # # # # # # #
su -c 'touch ~/.local/share/applications/nnn.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=nnn\n\
Icon=caja-actions\n\
Exec=kitty -e nnn\n\
" >> /home/$USER/.local/share/applications/nnn.desktop

# add desktop applications
# # # # # # # # # # # # # # #
su -c 'touch ~/.local/share/applications/ranger.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=ranger\n\
Icon=caja-actions\n\
Exec=kitty -e ranger\n\
" >> /home/$USER/.local/share/applications/ranger.desktop

su -c 'touch ~/.local/share/applications/shutdown.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Shutdown\n\
Icon=gshutdown\n\
Exec=mate-session-save --shutdown-dialog\n\
" >> /home/$USER/.local/share/applications/shutdown.desktop

su -c 'touch ~/.local/share/applications/logout.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Logout\n\
Icon=gnome-lockscreen\n\
Exec=mate-session-save --logout-dialog\n\
" >> /home/$USER/.local/share/applications/logout.desktop

su -c "touch /home/$USER/.local/share/applications/night.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Night Display\n\
Icon=palemoon\n\
Exec=xgamma -rgamma 0.90 -ggamma 0.88 -bgamma 0.72\n\
" >> /home/$USER/.local/share/applications/night.desktop

su -c "touch /home/$USER/.local/share/applications/day.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Daytime Display\n\
Icon=sunflower\n\
Exec=xgamma -gamma 1\n\
" >> /home/$USER/.local/share/applications/day.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-off.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad OFF\n\
Icon=mouse\n\
Exec=xinput --disable 12\n\
" >> /home/$USER/.local/share/applications/trackpad-off.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-on.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad ON\n\
Icon=mouse\n\
Exec=xinput --enable 12\n\
" >> /home/$USER/.local/share/applications/trackpad-on.desktop

su -c "touch /home/$USER/.local/share/applications/night.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Night Display\n\
Icon=palemoon\n\
Exec=xgamma -rgamma 0.90 -ggamma 0.88 -bgamma 0.72\n\
" >> /home/$USER/.local/share/applications/night.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-off.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad OFF\n\
Icon=mouse\n\
Exec=xinput --disable 12\n\
" >> /home/$USER/.local/share/applications/trackpad-off.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-on.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad ON\n\
Icon=mouse\n\
Exec=xinput --enable 12\n\
" >> /home/$USER/.local/share/applications/trackpad-on.desktop

su -c 'touch ~/.local/share/applications/mpv_dvd.desktop' $USER
printf "[Desktop Entry]\n\
Categories=AudioVideo;Audio;Video;Player;TV;\n\
Exec=mpv dvd://\n\
Icon=mpv\n\
MimeType=\n\
Name=Play DVD in mpv Media Player\n\
StartupNotify=true\n\
Terminal=false\n\
Type=Application\n\
" >> /home/$USER/.local/share/applications/mpv_dvd.desktop

su -c 'touch ~/.local/share/applications/mpv_bluray.desktop' $USER
printf "[Desktop Entry]\n\
Categories=AudioVideo;Audio;Video;Player;TV;\n\
Exec=mpv bd://\n\
Icon=mpv\n\
MimeType=\n\
Name=Play Bluray in mpv Media Player\n\
StartupNotify=true\n\
Terminal=false\n\
Type=Application\n\
" >> /home/$USER/.local/share/applications/mpv_bluray.desktop

# Installing configuration
# # # # # # # # # # # # # # #
log "installing custom configuration"
$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"
su -c "mkdir -p ~/lab" $USER
su -c "curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup --output /home/$USER/lab/setup" $USER
su -c "bash /home/$USER/lab/setup" $USER
su -c "cp -f /home/$USER/.yadrlite/workstation/Xresources /home/$USER/.Xresources" $USER
cp -f ~/.yadrlite/workstation/Xresources ~/.Xresources
su -c "cp -r /home/$USER/.yadrlite/workstation/nvim /home/$USER/.config" $USER
cp -r ~/.yadrlite/workstation/nvim ~/.config
su -c "cp -r /home/$USER/.yadrlite/workstation/kitty /home/$USER/.config" $USER
cp -r ~/.yadrlite/workstation/ranger ~/.config
su -c "cp -r /home/$USER/.yadrlite/workstation/ranger /home/$USER/.config" $USER

# nnn
install package nnn tree mediainfo ranger
mkdir -p ~/.config/nnn/plugins
cd ~/.config/nnn/plugins && $SHELL -c "`curl -s -S -L https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs`"
su -c "mkdir -p ~/.config/nnn/plugins" $USER
su -c "curl https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs --output ~/.config/nnn/plugins/getplugs" $USER
su -c "bash ~/.config/nnn/plugins/getplugs" $USER
rm /home/$USER/.config/nnn/plugins/getplugs

# set permissions
find /home/$USER/.config -type d -exec chmod 0755 {} \;
find /home/$USER/.config -type f -exec chmod 0644 {} \;
find /home/$USER/.config -name "*.sh" -execdir chmod u+x {} +

# misc sanity improvements
git config --global core.askpass ""

# theme adjustments
sed -i  's@#f7f7f7@#d3869b@g' /usr/share/themes/Yaru-dark/metacity-1/metacity-theme-1.xml

# improve sound
su -c 'touch ~/.config/pulse/daemon.conf' $USER
printf "high-priority = yes\n\
realtime-scheduling = yes\n\
realtime-priority = 9\n\
nice-level = -11\n\
\n\
default-sample-format = s32le\n\
default-sample-rate = 192000\n\
resample-method = speex-float-5\n\
\n\
default-sample-channels = 2\n\
remixing-produce-lfe = no\n\
remixing-consume-lfe = yes\n\
\n\
avoid-resampling = no\n\
" >> /home/$USER/.config/pulse/daemon.conf

# install flatpak
snap remove --purge firefox

# Removing snapd is popular if you know what you're doing.
# Otherwise, it also contains offline system updates for this OS
# outside the confines of apt dist-update.
# To remove the nagging completely:
# apt-get remove -y --purge snapd gnome-software-plugin-snap

# To restore snapd and offline updates:
# apt install gnome-software-plugin-snap
# snap install snap-store

# choose a default terminal
update-alternatives --config x-terminal-emulator

log "Installation complete.  Please reboot your system."
printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALL DONE.  PLEASE REBOOT YOUR SYSTEM."
