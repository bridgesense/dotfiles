#!/usr/bin/env bash
# This script is just a personal snapshot of my mx-linux workstation.
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/workstation/mx-linux > ~/install
# bash install <username>
# # # # # #Shutdown # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
USER="${1:francis}"
LOGFILE='/root/workstation-installation.log'

# Functions
# # # # # # # # # # # # # # #
function log {
	if [ -f "$LOGFILE" ]; then
		echo $1 >>$LOGFILE
	else
		echo $1 >$LOGFILE
	fi
}

function install {
	arr=("$@")
	_type=
	if [[ "$(declare -p arr)" =~ "declare -a" ]]; then
		for package in "${arr[@]}"; do
			if [[ $package == "package" ]]; then
				_type=$package
				continue
			fi
			if [[ $package == "flatpak" ]]; then
				_type=$package
				continue
			fi
			cnt=3
			while [ $cnt -gt 0 ]; do
				if dpkg --get-selections | grep $package; then
					break
				else
					if [[ $_type == "flatpak" ]]; then
						flatpak install flathub --noninteractive -y $package
						break
					else
						apt-get install -y $package
					fi
				fi
				let "cnt-=1"
			done
			if dpkg --get-selections | grep $package && [[ $_type != "flatpak" ]]; then
				log "There was a problem installing ${package}.  Please make sure this package exists."
			fi
		done
	else
		log "Warning! Passed variable is not an array".
	fi
}

# Run as root
# Commandline Tools
# # # # # # # # # # # # # # #
log "disabling ipv6"
printf "# Disable IPv6\n\
net.ipv6.conf.all.disable_ipv6 = 1\n\
net.ipv6.conf.default.disable_ipv6 = 1\n\
net.ipv6.conf.lo.disable_ipv6 = 1\n\
  " >>/etc/sysctl.conf
sysctl -p

echo "precedence ::ffff:0:0/96 100" >>/etc/gai.conf
echo "Acquire::ForceIPv4 \"true\";" >/etc/apt/apt.conf.d/99force-ipv4

log "installing commandline tools"
apt-get update
install package curl wget git git-lfs subversion
install package build-essential
install package libfreetype-dev libfontconfig-dev libxcb1-dev tmux xclip kitty
install package ack silversearcher-ag
install package isync msmtp pass universal-ctags
install package python3 python3-pip ruby-full openjdk-18-jre-headless
install package php perl maven
install package golang-go bison php-pear hugo
install package net-tools nmap dmg2img
install package software-properties-common python3-launchpadlib
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -r "unlink('composer-setup.php');"
pear channel-update doc.php.net

# fixes bluetooth pairing
systemctl enable bluetooth.service
sed -i 's@#AutoEnable.*@AutoEnable\=true@g' /etc/bluetooth/main.conf
sed -i 's@#ReconnectAttempts.*@ReconnectAttempts\=7@g' /etc/bluetooth/main.conf
sed -i 's@#FastConnectable.*@FastConnectable\=true@g' /etc/bluetooth/main.conf

# exchanges the esc and caps keys
# see system keyboard > Advanced tab > Caps Lock behavior = Swap ESC and Caps Lock

# support for Magic Trackpad 2
# see MX Tweak > Other > check Use libinput driver > click apply > restart

# to install hp setup
# tap the wifi icon on the printer and obtain the printer's ip address
# use the ip address in the following command
# sudo hp-setup -a <ip_address>

# setting up nodejs
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
apt-get update
install package nodejs
npm install --location=global npm@latest
npm install --location=global --save-dev grunt-cli gulp gulp-cli csslint typescript@3.0 typescript-language-server intelephense yaml-lint eslint-plugin-toml eslint-plugin-markdown golangci-lint vscode-css-languageserver-bin js-beautify unified-language-server eslint emmet-ls babel-eslint typescript-lsp coffeescript coffeelint grammarly-languageserver
su -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash" $USER
su -c "source ~/.bashrc && nvm install 16.14.0" $USER
curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg >/dev/null
echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
apt-get update
install package yarn

# install fonts
install package fonts-noto fontforge
printf "<?xml version=\"1.0\"?>\n\
<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n\
<fontconfig>\n\
  <dir>/usr/share/texlive/texmf-dist/fonts/opentype</dir>\n\
</fontconfig>n\
" >>/etc/fonts/conf.avail/65-texlive-fontconfig.conf
ln -s /etc/fonts/conf.avail/65-texlive-fontconfig.conf /etc/fonts/conf.d/65-texlive-fontconfig.conf
fc-cache -f -v

# go

# hugo

# dmg2img for mac vm

# install supplementary packages
install package texlive-full
install package clamav clamav-update w3m w3m-img
install package gnutls-bin maildir-utils
install package gcolor3 flameshot transmission
install package gnome-boxes
install package nextcloud-desktop fontforge caffeine
install package audacity
install package pdfarranger wordnet
install package yt-dlp

# gimp
log "installing gimp and plugins"
install package gimp gimp-data-extras gimp-plugin-registry gimp-gluas gimp-gmic gimp-gap

# emacs
log "installing emacs and plugins"
apt-get remove -y --autoremove emacs emacs-common
mkdir -p ~/lab
cd ~/lab
git clone git://git.sv.gnu.org/emacs.git -b emacs-27
cd emacs
bash autogen.sh
bash configure --without-makeinfo --with-gnutls=ifavailable --with-mailutils
make
make install

# install mu4e
install package autoconf meson libgmime-3.0-dev libxapian-dev libxaw7-dev libtiff5-dev libgtk2.0-dev libgif-dev libgnutls28-dev libncurses-dev cmake guile-3.0-dev
mkdir -p ~/lab
cd ~/lab
git clone https://github.com/djcb/mu.git -b release/1.8
bash autogen.sh
ninja -C build
make install

# syncterm
# thanks to MeaTLoTioN
# https://www.erb.pw/how-to-install-syncterm-for-linux-from-source/
install package libncurses5-dev libncursesw5-dev gcc libsdl1.2-dev
cd ~/lab
wget http://syncterm.bbsdev.net/syncterm-src.tgz
tar xvzf syncterm-src.tgz
D=$(ls -1hrtd sync*/ | tail -1 | sed 's/\/$//g')
cd ${D}/src/syncterm
st_path=$(pwd | sed 's/\/syncterm$//g')
make SRC_ROOT=$st_path
make install

# play/pause override
# playerctl --all-players play-pause
# install package playerctld

# firewall
ufw enable
ufw allow 9003/tcp

# documentation
# # # # # # # # # # # # # # #
install package rsyslog-doc

# add desktop applications
# # # # # # # # # # # # # # #
su -c 'touch ~/.local/share/applications/nnn.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=nnn\n\
Icon=caja-actions\n\
Exec=kitty -e nnn\n\
" >>/home/$USER/.local/share/applications/nnn.desktop

# add desktop applications
# # # # # # # # # # # # # # #
su -c 'touch ~/.local/share/applications/ranger.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=ranger\n\
Icon=caja-actions\n\
Exec=kitty -e ranger\n\
" >>/home/$USER/.local/share/applications/ranger.desktop

su -c 'touch ~/.local/share/applications/sleep.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Sleep\n\
Icon=gshutdown\n\
Exec=xfce4-session-logout --suspend\n\
" >>/home/$USER/.local/share/applications/sleep.desktop

su -c 'touch ~/.local/share/applications/shutdown.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Shutdown\n\
Icon=gshutdown\n\
Exec=xfce4-session-logout --halt\n\
" >>/home/$USER/.local/share/applications/shutdown.desktop

su -c 'touch ~/.local/share/applications/logout.desktop' $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Logout\n\
Icon=gnome-lockscreen\n\
Exec=xfce4-session-logout\n\
" >>/home/$USER/.local/share/applications/logout.desktop

su -c "touch /home/$USER/.local/share/applications/night.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Night Display\n\
Icon=palemoon\n\
Exec=xgamma -rgamma 0.90 -ggamma 0.88 -bgamma 0.72\n\
" >>/home/$USER/.local/share/applications/night.desktop

su -c "touch /home/$USER/.local/share/applications/day.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Daytime Display\n\
Icon=sunflower\n\
Exec=xgamma -gamma 1\n\
" >>/home/$USER/.local/share/applications/day.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-off.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad OFF\n\
Icon=mouse\n\
Exec=xinput --disable 12\n\
" >>/home/$USER/.local/share/applications/trackpad-off.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-on.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad ON\n\
Icon=mouse\n\
Exec=xinput --enable 12\n\
" >>/home/$USER/.local/share/applications/trackpad-on.desktop

su -c "touch /home/$USER/.local/share/applications/night.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Night Display\n\
Icon=palemoon\n\
Exec=xgamma -rgamma 0.90 -ggamma 0.88 -bgamma 0.72\n\
" >>/home/$USER/.local/share/applications/night.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-off.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad OFF\n\
Icon=mouse\n\
Exec=xinput --disable 12\n\
" >>/home/$USER/.local/share/applications/trackpad-off.desktop

su -c "touch /home/$USER/.local/share/applications/trackpad-on.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Trackpad ON\n\
Icon=mouse\n\
Exec=xinput --enable 12\n\
" >>/home/$USER/.local/share/applications/trackpad-on.desktop

# Neovim and tools
# # # # # # # # # # # # # # #
install pacakge ripgrep fd-find libtree-sitter-dev luajit

cd ~/lab
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
tar xf lazygit.tar.gz lazygit
cp lazygit /usr/local/bin

# Neomutt
# # # # # # # # # # # # # # #
log "compiling neomutt"
install package gcc make libssl-dev libgtk2.0-dev libglib2.0-dev libidn2-dev libtokyocabinet-dev
install package liboauth-dev libnspr4-dev libnss3-dev libexpat1-dev libssl-dev
install package gettext libncurses5-dev libslang2-dev libtcl8.6 libxml2-utils libxslt1-dev lynx
install package libgnutls28-dev libsass-dev libgpgme-dev krb5-multidev libtokyocabinet-dev
install package xsltproc libsasl2-dev lbdb offlineimap urlview gettext libnotmuch-dev notmuch
cd ~/lab
git clone https://github.com/neomutt/neomutt.git ~/lab/neomutt
cd ~/lab/neomutt && ./configure --with-sasl=/usr/bin --with-ssl=/usr/bin --with-gpgme=/bin --with-gnutls=/bin --disable-mixmaster --disable-autocrypt --disable-doc --with-lua=/usr/bin --with-notmuch=/usr/bin
make -k -C ~/lab/neomutt
make install

# Installing configuration
# # # # # # # # # # # # # # #
log "installing custom configuration"
$SHELL -c "$(curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup)"
su -c "mkdir -p ~/lab" $USER
su -c "curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup --output /home/$USER/lab/setup" $USER
su -c "bash /home/$USER/lab/setup" $USER
su -c "cp -f /home/$USER/.yadrlite/workstation/Xresources /home/$USER/.Xresources" $USER
cp -f ~/.yadrlite/workstation/Xresources ~/.Xresources
su -c "cp -r /home/$USER/.yadrlite/workstation/nvim /home/$USER/.config" $USER
cp -r ~/.yadrlite/workstation/nvim ~/.config
su -c "cp -r /home/$USER/.yadrlite/workstation/kitty /home/$USER/.config" $USER
cp -r ~/.yadrlite/workstation/ranger ~/.config
su -c "cp -r /home/$USER/.yadrlite/workstation/ranger /home/$USER/.config" $USER
su -c "cp -r /home/$USER/.yadrlite/workstation/fonts /home/$USER/.local/share" $USER
su -c "mkdir -p /home/$USER/.local/share/fonts && cp -r /home/$USER/.yadrlite/workstation/fonts /home/$USER/.local/share/fonts" $USER
su -c "pip3 install neovim pynvim --user" $USER

# nnn
install package nnn tree mediainfo
mkdir -p ~/.config/nnn/plugins
cd ~/.config/nnn/plugins && $SHELL -c "$(curl -s -S -L https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs)"
su -c "mkdir -p ~/.config/nnn/plugins" $USER
su -c "curl https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs --output ~/.config/nnn/plugins/getplugs" $USER
su -c "bash ~/.config/nnn/plugins/getplugs" $USER
rm /home/$USER/.config/nnn/plugins/getplugs

# ranger and tools
install package ranger atool feh mupdf

# set permissions
find /home/$USER/.config -type d -exec chmod 0755 {} \;
find /home/$USER/.config -type f -exec chmod 0644 {} \;
find /home/$USER/.config -name "*.sh" -execdir chmod u+x {} +

# install misc libraries
install package libsdl-ttf2.0-dev libsdl-sound1.2-dev libsdl-gfx1.2-dev
install package libsdl2-dev libsdl2-ttf-dev libsdl2-mixer-dev libsdl2-image-dev libsdl2-gfx-dev

# misc sanity improvements
git config --global core.askpass ""

# access older luks ecrypted drives
install package luksmeta

# restore systemd and install pod tools
install package systemd-sysv
install catatonit podman buildah slirp4netns

# improves sound
apt-get install --reinstall -y pipewire wireplumber pipewire-setup-mx libcamera0.0.3 rtkit
systemctl enable rtkit-daemon
su -c 'mkdir -p ~/.config/pipewire/pipewire.conf.d' $USER
su -c 'touch ~/.config/pipewire/pipewire.conf.d/99-enable-mqa.conf' $USER
printf "context.properties = {\n\
    link.max-buffers = 16           # version < 3 clients can't handle more\n\
    core.daemon = true              # listening for socket connections\n\
    core.name   = pipewire-0        # core name and socket name\n\
    default.sample.format = S32LE\n\
    default.clock.rate          = 96000\n\ 
    default.clock.allowed-rates = [ 96000 ]\n\
    default.clock.min-quantum   = 16\n\
    enable-mqa-support = true\n\
    vm.overrides = {\n\
        default.clock.min-quantum = 1024\n\
    }\n\
}\n\
" >>/home/$USER/.config/pipewire/pipewire.conf.d/99-enable-mqa.conf

# run MX Codecs installer in MX Settings
# this installs bluray stuff
install libbluray-bdj libbluray2 libaacs0 libbdplus0
su -c 'mkdir -p ~/.config/aacs' $USER
su -c 'wget https://code.videolan.org/videolan/libaacs/blob/master/KEYDB.cfg -O ~/.config/aacs/KEYDB.cfg' $USER

# Lampready prep patch
# apt-get remove -y apache2 --purge
# echo "net.ipv4.ip_unprivileged_port_start=0" >/etc/sysctl.d/05-expose-privileged.conf
# sysctl --system

# Some Lenovo stuff

# install package fuwpd thinkfan acpi-support
# systemctl enable thinkfan

# Poweroff/Suspend bugfix for the T-460
# References:
# https://forums.debian.net/viewtopic.php?p=744874&sid=b3977d6eebbddfab4d88a7c41820283d#p744874
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=990868#27

# printf "blacklist tpm\n\
# blacklist tpm_crb\n\
# blacklist tpm_tis\n\
# blacklist tpm_tis_core\n\
# " >>/usr/lib/modprobe.d/fbdev-blacklist.conf
# sed -i 's@quiet splash@@quiet splash intel_iommu=off'/etc/default/grub
# update-grub

log "Installation complete.  Please reboot your system."
printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALL DONE.  PLEASE REBOOT YOUR SYSTEM."
