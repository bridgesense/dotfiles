#!/usr/bin/env bash
# This script is a reproduction of my personal trisquel 10 workstation.
# curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/workstation/trisquel-10 > ~/install
# bash install <username>
# # # # # #Shutdown # # # # # # # # #

# Options
# # # # # # # # # # # # # # #
USER="${1:francis}"
LOGFILE='/root/workstation-installation.log'

# Functions
# # # # # # # # # # # # # # #
function log {
    if [ -f "$LOGFILE" ]; then
        echo $1 >> $LOGFILE
    else
        echo $1 > $LOGFILE
    fi
}

function install {
    arr=("$@")
    _type=
    if [[ "$(declare -p arr)" =~ "declare -a" ]]; then
        for package in "${arr[@]}"; do
            if [[ $package == "package" ]]; then
                _type=$package
                continue
            fi
            cnt=3
            while [ $cnt -gt 0 ]; do
                if dpkg --get-selections | grep $package; then
                    break;
                else
                    apt-get install -y $package
                fi
                let "cnt-=1"
            done
            if dpkg --get-selections | grep $package; then
                log "There was a problem installing ${package}.  Please make sure this package exists."
            fi
        done
    else
        log "Warning! Passed variable is not an array".
    fi
}

# Run as root
# Commandline Tools
# # # # # # # # # # # # # # #
log "installing commandline tools"
apt-get update
install package git subversion curl
install package build-essential
install package ack silversearcher-ag
install package msmtp pass universal-ctags
install package python3 ruby-full openjdk-18-jre-headless
install package php perl maven
install package golang bison php-pear
install package pdfarranger wordnet
install package mate-applet-brisk-menu
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -r "unlink('composer-setup.php');"
pear channel-update doc.php.net

# fixes bluetooth pairing
systemctl enable bluetooth.service
sed -i  's@#AutoEnable.*@AutoEnable\=true@g' /etc/bluetooth/main.conf
sed -i  's@#ReconnectAttempts.*@ReconnectAttempts\=7@g' /etc/bluetooth/main.conf
sed -i  's@#FastConnectable.*@FastConnectable\=true@g' /etc/bluetooth/main.conf

# exchanges the esc and caps keys
# See Keyboard Preferences > Caps Lock behavoir > Swap Esc and Caps Lock

# to install hp setup
# tap the wifi icon on the printer and obtain the printer's ip address
# use the ip address in the following command
# sudo hp-setup -a <ip_address>

# setting up nodejs
curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -
apt-get update
install package nodejs npm gnupg2 gnupg wget
npm install --location=global npm@latest
npm install --location=global npm
npm install --location=global grunt-cli eslint csslint gulp-sass typescript typescript-language-server intelephense coffeelint yaml-lint eslint-plugin-toml eslint-plugin-markdown golangci-lint vscode-css-languageserver-bin js-beautify unified-language-server
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
npm install --location=global yarn
ln -s /usr/local/lib/node_modules/yarn/bin/yarn /usr/bin/yarn
npm install --location=global gulp gulp-cli gulp-util --save-dev
npm i --package-lock-only
npm audit fix --force
npm cache clean -f
npm install -g n
n stable

# time
install package ntp
systemctl enable ntp

# install fonts
install package fonts-noto fontforge
printf "<?xml version=\"1.0\"?>\n\
<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n\
<fontconfig>\n\
  <dir>/usr/share/texlive/texmf-dist/fonts/opentype</dir>\n\
</fontconfig>n\
" >> /etc/fonts/conf.avail/65-texlive-fontconfig.conf
ln -s /etc/fonts/conf.avail/65-texlive-fontconfig.conf /etc/fonts/conf.d/65-texlive-fontconfig.conf
fc-cache -f -v

# install coding tools
install package libfreetype-dev libfontconfig-dev libxcb1-dev tmux xclip
install package python3-neovim python3-pynvim
gem install bundler --pre
gem install --no-user-install neovim
gem install --no-user-install compass

# go
install package golang-go

# hugo
install package hugo

# dmg2img for mac vm
install package dmg2img

# install supplementary packages
install package network-manager-openvpn network-manager-openconnect
install package aspell-en texlive-full papirus-icon-theme
install package clamav clamav-update brasero w3m w3m-img
install package ftp telnet hplip hplip-gui simple-scan
install package neovim gnutls-bin imagemagick gnupg2
install package gcolor3 flameshot transmission
install package gnome-boxes gnome-disk-utility usb-creator-gtk
install package stacer timeshift caffeine
install package google-chrome-stable gnome-software gnome-software-plugin-flatpak
install package nextcloud-desktop fontforge
install package libreoffice
install package science-electronics stellarium
install package obs-studio kdenlive audacity vlc*

# gimp
log "installing gimp and plugins"
install package gimp gimp-data-extras gimp-plugin-registry gimp-gluas gimp-gmic gimp-gap

# buildah and podman
echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /" | sudo tee /etc/apt/sources.list.d/devel-kubic-libcontainers-stable.list
curl -Ls https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_20.04/Release.key | sudo apt-key add -
apt-get update
install package buildah podman 

# install mu4e
log "installing emacs and plugins"
apt-get remove -y --autoremove emacs emacs-common
install package autoconf meson libgmime-3.0-dev libxapian-dev libxaw7-dev libtiff5-dev libgtk2.0-dev libgif-dev libgnutls28-dev libencurses-dev
mkdir -p ~/lab
cd ~/lab
git clone https://github.com/djcb/mu.git -b release/1.8
cd mu
bash autogen.sh
ninja -C build
make install

# isync
cd ~/lab
git clone https://git.code.sf.net/p/isync/isync isync-isync -b 1.4
cd isync-isync
bash autogen.sh
bash configure
make
make install

# emacs
cd ~/lab
git clone git://git.sv.gnu.org/emacs.git -b emacs-27
cd emacs
bash autogen.sh
bash configure --without-makeinfo --with-gnutls=ifavailable --with-mailutils
make
make install

# syncterm
# thanks to MeaTLoTioN
# https://www.erb.pw/how-to-install-syncterm-for-linux-from-source/
install package libncurses5-dev libncursesw5-dev gcc libsdl1.2-dev
cd ~/lab
wget http://syncterm.bbsdev.net/syncterm-src.tgz
tar xvzf syncterm-src.tgz
D=$(ls -1hrtd sync*/|tail -1|sed 's/\/$//g')
cd ${D}/src/syncterm
st_path=$(pwd | sed 's/\/syncterm$//g')
make SRC_ROOT=$st_path
make install

# firewall
install package ufw
ufw enable
ufw allow 9003/tcp

# media extras
install package libxine2-ffmpeg libxine2-all-plugins
install package mpv
cd ~/lab
wget http://download.videolan.org/debian/stable/libdvdcss2_1.2.13-0_amd64.deb
dpkg -i *.deb
rm -f *.deb

#yt-dlp
wget https://github.com/yt-dlp/yt-dlp/releases/download/2023.01.06/yt-dlp_linux -O /usr/bin/yt-dlp
chmod +x /usr/bin/yt-dlp

# removes apache2 default installation
# for compatibility with podman application
apt-get remove -y apache2 --purge

# documentation
# # # # # # # # # # # # # # #
install package rsyslog-doc

# add desktop applications
# # # # # # # # # # # # # # #
su -c "mkdir -p /home/$USER/.local/share/applications" $USER
su -c "touch /home/$USER/.local/share/applications/nnn.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=nnn\n\
Icon=caja-actions\n\
Exec=mate-terminal -e nnn\n\
" >> /home/$USER/.local/share/applications/nnn.desktop

su -c "touch /home/$USER/.local/share/applications/shutdown.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Shutdown\n\
Icon=gshutdown\n\
Exec=mate-session-save --shutdown-dialog\n\
" >> /home/$USER/.local/share/applications/shutdown.desktop

su -c "touch /home/$USER/.local/share/applications/logout.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Logout\n\
Icon=gnome-lockscreen\n\
Exec=mate-session-save --logout-dialog\n\
" >> /home/$USER/.local/share/applications/logout.desktop

su -c "touch /home/$USER/.local/share/applications/night.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Night Display\n\
Icon=palemoon\n\
Exec=xgamma -rgamma 0.90 -ggamma 0.88 -bgamma 0.72\n\
" >> /home/$USER/.local/share/applications/night.desktop

su -c "touch /home/$USER/.local/share/applications/day.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=Daytime Display\n\
Icon=sunflower\n\
Exec=xgamma -gamma 1\n\
" >> /home/$USER/.local/share/applications/day.desktop

su -c "touch /home/$USER/.local/share/applications/mpv.desktop" $USER
printf "[Desktop Entry]\n\
Type=Application\n\
Name=mpv Media Player\n\
Comment=Play movies and songs\n\
Icon=mpv\n\
TryExec=mpv\n\
Exec=mpv --player-operation-mode=pseudo-gui -- %U\n\
Terminal=false\n\
Categories=AudioVideo;Audio;Video;Player;TV;\n\
MimeType=application/ogg;application/x-ogg;application/mxf;application/sdp;application/smil;application/x-smil;application/streamingmedia;application/x-streamingmedia;application/vnd.rn-realmedia;application/vnd.rn-realmedia-vbr;audio/aac;audio/x-aac;audio/vnd.dolby.heaac.1;audio/vnd.dolby.heaac.2;audio/aiff;audio/x-aiff;audio/m4a;audio/x-m4a;application/x-extension-m4a;audio/mp1;audio/x-mp1;audio/mp2;audio/x-mp2;audio/mp3;audio/x-mp3;audio/mpeg;audio/mpeg2;audio/mpeg3;audio/mpegurl;audio/x-mpegurl;audio/mpg;audio/x-mpg;audio/rn-mpeg;audio/musepack;audio/x-musepack;audio/ogg;audio/scpls;audio/x-scpls;audio/vnd.rn-realaudio;audio/wav;audio/x-pn-wav;audio/x-pn-windows-pcm;audio/x-realaudio;audio/x-pn-realaudio;audio/x-ms-wma;audio/x-pls;audio/x-wav;video/mpeg;video/x-mpeg2;video/x-mpeg3;video/mp4v-es;video/x-m4v;video/mp4;application/x-extension-mp4;video/divx;video/vnd.divx;video/msvideo;video/x-msvideo;video/ogg;video/quicktime;video/vnd.rn-realvideo;video/x-ms-afs;video/x-ms-asf;audio/x-ms-asf;application/vnd.ms-asf;video/x-ms-wmv;video/x-ms-wmx;video/x-ms-wvxvideo;video/x-avi;video/avi;video/x-flic;video/fli;video/x-flc;video/flv;video/x-flv;video/x-theora;video/x-theora+ogg;video/x-matroska;video/mkv;audio/x-matroska;application/x-matroska;video/webm;audio/webm;audio/vorbis;audio/x-vorbis;audio/x-vorbis+ogg;video/x-ogm;video/x-ogm+ogg;application/x-ogm;application/x-ogm-audio;application/x-ogm-video;application/x-shorten;audio/x-shorten;audio/x-ape;audio/x-wavpack;audio/x-tta;audio/AMR;audio/ac3;audio/eac3;audio/amr-wb;video/mp2t;audio/flac;audio/mp4;application/x-mpegurl;video/vnd.mpegurl;application/vnd.apple.mpegurl;audio/x-pn-au;video/3gp;video/3gpp;video/3gpp2;audio/3gpp;audio/3gpp2;video/dv;audio/dv;audio/opus;audio/vnd.dts;audio/vnd.dts.hd;audio/x-adpcm;application/x-cue;audio/m3u;\n\
X-KDE-Protocols=ftp,http,https,mms,rtmp,rtsp,sftp,smb\n\
Keywords=mpv;media;player;video;audio;tv;\n\
NoDisplay=false\n\
" >> /home/$USER/.local/share/applications/mpv.desktop

# Installing configuration
# # # # # # # # # # # # # # #
log "installing custom configuration"
$SHELL -c "`curl -fsSL https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup`"
su -c "mkdir -p /home/$USER/lab" $USER
su -c "curl https://raw.githubusercontent.com/bridgesense/dotfiles/master/setup --output /home/$USER/lab/setup" $USER
su -c "bash /home/$USER/lab/setup" $USER
su -c "cp -f /home/$USER/.yadrlite/workstation/Xresources /home/$USER/.Xresources" $USER
cp -f ~/.yadrlite/workstation/Xresources ~/.Xresources
su -c "cp -r /home/$USER/.yadrlite/workstation/nvim /home/$USER/.config" $USER
cp -r ~/.yadrlite/workstation/nvim ~/.config

# nnn
install package nnn tree mediainfo
mkdir -p ~/.config/nnn/plugins
cd ~/.config/nnn/plugins && $SHELL -c "`curl -s -S -L https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs`"
su -c "mkdir -p /home/$USER/.config/nnn/plugins" $USER
su -c "curl https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs --output /home/$USER/.config/nnn/plugins/getplugs" $USER
su -c "bash /home/$USER/.config/nnn/plugins/getplugs" $USER
rm /home/$USER/.config/nnn/plugins/getplugs

# set permissions
find /home/$USER/.config -type d -exec chmod 0755 {} \;
find /home/$USER/.config -type f -exec chmod 0644 {} \;
find /home/$USER/.config -name "*.sh" -execdir chmod u+x {} +

# Adds Nerdfonts DejaVuSansMono
su -c "mkdir -p ~/.local/share/fonts/" $USER
su -c "cd /home/$USER/.local/share/fonts && svn checkout --non-interactive https://github.com/ryanoasis/nerd-fonts/trunk/patched-fonts/DejaVuSansMono" $USER
su -c "cd /home/$USER/.local/share/fonts && svn checkout --non-interactive https://github.com/ryanoasis/nerd-fonts/trunk/patched-fonts/Inconsolata" $USER
su -c "cd /home/$USER/.local/share/fonts && svn checkout --non-interactive https://github.com/ryanoasis/nerd-fonts/trunk/patched-fonts/FiraCode" $USER

# misc sanity improvements
git config --global core.askpass ""

# theme adjustments
sed -i  's@#f7f7f7@#d3869b@g' /usr/share/themes/Yaru-dark/metacity-1/metacity-theme-1.xml

# improve sound
su -c "touch /home/$USER/.config/pulse/daemon.conf" $USER
printf "high-priority = yes\n\
realtime-scheduling = yes\n\
realtime-priority = 9\n\
nice-level = -11\n\
\n\
default-sample-format = s32le\n\
default-sample-rate = 192000\n\
resample-method = speex-float-5\n\
\n\
default-sample-channels = 2\n\
remixing-produce-lfe = no\n\
remixing-consume-lfe = yes\n\
\n\
avoid-resampling = no\n\
" >> /home/$USER/.config/pulse/daemon.conf

log "Installation nearly complete."
log "Now installing the wifi driver."
printf "\r# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\r"
printf "ALMOST DONE.  SHORTLY, YOU'LL BE ASKED TO REBOOT YOUR SYSTEM."
printf "ALSO: Be sure to enable WebGL in Abrowser!"
printf "Place about:config in your browser URL and search for webgl.disabled"
printf "Change the setting to false."

# wireless library for 8812cu
# This library is compatible with most Wifi Adapters based on the Realtech 8811CU chipset
# There are some low profile adapters that are good alternative to using proprietary
# hardware.
# see the following compatible usb wifi devices:
# EDUP EP-AC1651 nano 
# EDUP EP-AC1635
# Ourlink Nano AC600 (Mini only)
# Ref: https://github.com/morrownr/8821cu-20210118/blob/main/supported-device-IDs
install package iw bc dkms rfkill
cd ~/lab
git clone https://github.com/morrownr/8821cu-20210118.git
cd 8821*
bash install-driver.sh
