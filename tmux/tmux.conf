# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal tmux-256color
set -ga terminal-overrides ",xterm-256color:RGB"

# emacs patch
set-window-option -g xterm-keys on

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# add vimlink copy/paste functionality
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Patch for OS X pbpaste and pbcopy under tmux.
# set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
# bind-key -T copy-mode-vi 'y' send copy-selection-and-cancel


# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg colour246
set -g status-bg colour234
set -g pane-border-style fg=colour246
set -g pane-active-border-style fg=colour38,bg=colour234
set -g status-left '#[fg=colour234,bg=colour246,bold] ‚ùê #S #[fg=colour246,bg=colour234,nobold] #[fg=colour246,bg=colour234,bold] #(whoami) #[fg=colour246,bg=colour234,nobold] '
set-window-option -g window-status-format "#[fg=colour246,bg=colour234,bold] #I #W "
set-window-option -g window-status-current-format "#[fg=colour38,bg=colour234] #[fg=colour38,bg=colour234,noreverse,bold] #{?window_zoomed_flag,#[fg=colour229],} #I: #W #[fg=colour38,bg=colour234,nobold] "

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

# tmux-resurrect
set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-dir '~/.resurrect'
run-shell ~/.yadrlite/tmux/plugin/tmux-resurrect/resurrect.tmux

# tmux-continuum
set -g @continuum-restore 'on'
run-shell ~/.yadrlite/tmux/plugin/tmux-continuum/continuum.tmux

# With this enabled you can use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'

# Set default shell
